// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0402d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000061035156250);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0402910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000061035156250);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0412d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000061988830566);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0412910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000061988830566);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0422d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000062942504883);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0422910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000062942504883);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0432d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000063896179199);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0432910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000063896179199);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0442d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000064849853516);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0442910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000064849853516);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0452d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000065803527832);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0452910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000065803527832);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0462d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000066757202148);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0462910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000066757202148);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0472d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000067710876465);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0472910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000067710876465);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0482d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000068664550781);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0482910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000068664550781);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0492d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000069618225098);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0492910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000069618225098);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x04a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000070571899414);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x04a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000070571899414);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x04b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000071525573730);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x04b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000071525573730);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x04c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000072479248047);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x04c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000072479248047);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x04d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000073432922363);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x04d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000073432922363);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x04e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000074386596680);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x04e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000074386596680);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x04f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000075340270996);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x04f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000075340270996);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0502d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000076293945312);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0502910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000076293945312);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0512d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000077247619629);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0512910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000077247619629);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0522d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000078201293945);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0522910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000078201293945);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0532d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000079154968262);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0532910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000079154968262);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0542d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000080108642578);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0542910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000080108642578);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0552d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000081062316895);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0552910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000081062316895);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0562d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000082015991211);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0562910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000082015991211);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0572d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000082969665527);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0572910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000082969665527);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0582d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000083923339844);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0582910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000083923339844);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0592d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000084877014160);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0592910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000084877014160);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x05a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000085830688477);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x05a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000085830688477);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x05b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000086784362793);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x05b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000086784362793);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x05c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000087738037109);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x05c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000087738037109);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x05d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000088691711426);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x05d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000088691711426);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x05e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000089645385742);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x05e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000089645385742);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x05f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000090599060059);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x05f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000090599060059);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0602d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000091552734375);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0602910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000091552734375);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0612d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000092506408691);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0612910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000092506408691);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0622d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000093460083008);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0622910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000093460083008);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0632d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000094413757324);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0632910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000094413757324);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0642d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000095367431641);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0642910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000095367431641);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0652d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000096321105957);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0652910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000096321105957);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0662d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000097274780273);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0662910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000097274780273);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0672d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000098228454590);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0672910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000098228454590);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0682d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000099182128906);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0682910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000099182128906);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0692d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000100135803223);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0692910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000100135803223);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x06a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000101089477539);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x06a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000101089477539);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x06b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000102043151855);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x06b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000102043151855);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x06c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000102996826172);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x06c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000102996826172);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x06d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000103950500488);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x06d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000103950500488);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x06e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000104904174805);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x06e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000104904174805);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x06f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000105857849121);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x06f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000105857849121);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0702d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000106811523438);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0702910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000106811523438);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0712d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000107765197754);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0712910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000107765197754);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0722d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000108718872070);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0722910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000108718872070);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0732d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000109672546387);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0732910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000109672546387);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0742d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000110626220703);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0742910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000110626220703);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0752d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000111579895020);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0752910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000111579895020);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0762d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000112533569336);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0762910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000112533569336);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0772d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000113487243652);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0772910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000113487243652);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0782d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000114440917969);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0782910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000114440917969);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0792d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000115394592285);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0792910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000115394592285);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x07a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000116348266602);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x07a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000116348266602);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x07b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000117301940918);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x07b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000117301940918);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x07c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000118255615234);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x07c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000118255615234);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x07d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000119209289551);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x07d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000119209289551);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x07e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000120162963867);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x07e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000120162963867);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x07f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000121116638184);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x07f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000121116638184);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0802d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000122070312500);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0802910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000122070312500);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0812d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000123977661133);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0812910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000123977661133);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0822d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000125885009766);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0822910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000125885009766);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0832d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000127792358398);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0832910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000127792358398);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0842d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000129699707031);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0842910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000129699707031);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0852d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000131607055664);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0852910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000131607055664);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0862d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000133514404297);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0862910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000133514404297);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0872d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000135421752930);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0872910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000135421752930);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0882d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000137329101562);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0882910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000137329101562);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0892d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000139236450195);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0892910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000139236450195);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x08a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000141143798828);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x08a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000141143798828);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x08b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000143051147461);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x08b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000143051147461);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x08c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000144958496094);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x08c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000144958496094);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x08d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000146865844727);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x08d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000146865844727);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x08e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000148773193359);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x08e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000148773193359);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x08f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000150680541992);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x08f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000150680541992);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0902d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000152587890625);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0902910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000152587890625);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0912d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000154495239258);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0912910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000154495239258);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0922d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000156402587891);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0922910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000156402587891);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0932d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000158309936523);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0932910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000158309936523);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0942d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000160217285156);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0942910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000160217285156);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0952d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000162124633789);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0952910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000162124633789);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0962d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000164031982422);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0962910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000164031982422);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0972d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000165939331055);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0972910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000165939331055);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0982d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000167846679688);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0982910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000167846679688);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0992d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000169754028320);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0992910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000169754028320);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x09a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000171661376953);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x09a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000171661376953);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x09b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000173568725586);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x09b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000173568725586);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x09c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000175476074219);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x09c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000175476074219);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x09d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000177383422852);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x09d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000177383422852);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x09e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000179290771484);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x09e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000179290771484);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x09f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000181198120117);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x09f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000181198120117);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0a02d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000183105468750);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0a02910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000183105468750);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0a12d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000185012817383);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0a12910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000185012817383);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0a22d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000186920166016);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0a22910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000186920166016);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0a32d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000188827514648);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0a32910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000188827514648);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0a42d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000190734863281);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0a42910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000190734863281);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0a52d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000192642211914);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0a52910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000192642211914);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0a62d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000194549560547);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0a62910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000194549560547);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0a72d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000196456909180);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0a72910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000196456909180);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0a82d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000198364257812);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0a82910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000198364257812);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0a92d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000200271606445);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0a92910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000200271606445);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0aa2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000202178955078);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0aa2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000202178955078);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0ab2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000204086303711);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0ab2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000204086303711);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0ac2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000205993652344);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0ac2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000205993652344);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0ad2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000207901000977);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0ad2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000207901000977);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0ae2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000209808349609);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0ae2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000209808349609);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0af2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000211715698242);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0af2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000211715698242);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0b02d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000213623046875);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0b02910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000213623046875);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0b12d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000215530395508);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0b12910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000215530395508);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0b22d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000217437744141);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0b22910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000217437744141);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0b32d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000219345092773);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0b32910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000219345092773);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0b42d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000221252441406);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0b42910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000221252441406);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0b52d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000223159790039);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0b52910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000223159790039);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0b62d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000225067138672);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0b62910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000225067138672);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0b72d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000226974487305);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0b72910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000226974487305);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0b82d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000228881835938);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0b82910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000228881835938);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0b92d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000230789184570);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0b92910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000230789184570);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0ba2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000232696533203);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0ba2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000232696533203);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0bb2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000234603881836);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0bb2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000234603881836);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0bc2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000236511230469);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0bc2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000236511230469);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0bd2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000238418579102);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0bd2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000238418579102);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0be2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000240325927734);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0be2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000240325927734);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0bf2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000242233276367);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0bf2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000242233276367);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0c02d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000244140625000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0c02910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000244140625000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0c12d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000247955322266);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0c12910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000247955322266);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0c22d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000251770019531);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0c22910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000251770019531);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0c32d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000255584716797);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0c32910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000255584716797);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0c42d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000259399414062);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0c42910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000259399414062);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0c52d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000263214111328);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0c52910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000263214111328);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0c62d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000267028808594);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0c62910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000267028808594);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0c72d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000270843505859);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0c72910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000270843505859);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0c82d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000274658203125);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0c82910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000274658203125);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0c92d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000278472900391);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0c92910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000278472900391);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0ca2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000282287597656);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0ca2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000282287597656);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0cb2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000286102294922);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0cb2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000286102294922);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0cc2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000289916992188);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0cc2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000289916992188);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0cd2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000293731689453);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0cd2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000293731689453);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0ce2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000297546386719);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0ce2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000297546386719);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0cf2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000301361083984);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0cf2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000301361083984);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0d02d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000305175781250);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0d02910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000305175781250);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0d12d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000308990478516);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0d12910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000308990478516);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0d22d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000312805175781);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0d22910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000312805175781);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0d32d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000316619873047);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0d32910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000316619873047);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0d42d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000320434570312);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0d42910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000320434570312);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0d52d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000324249267578);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0d52910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000324249267578);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0d62d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000328063964844);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0d62910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000328063964844);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0d72d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000331878662109);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0d72910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000331878662109);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0d82d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000335693359375);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0d82910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000335693359375);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0d92d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000339508056641);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0d92910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000339508056641);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0da2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000343322753906);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0da2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000343322753906);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0db2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000347137451172);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0db2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000347137451172);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0dc2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000350952148438);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0dc2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000350952148438);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0dd2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000354766845703);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0dd2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000354766845703);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0de2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000358581542969);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0de2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000358581542969);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0df2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000362396240234);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0df2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000362396240234);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0e02d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000366210937500);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0e02910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000366210937500);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0e12d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000370025634766);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0e12910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000370025634766);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0e22d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000373840332031);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0e22910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000373840332031);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0e32d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000377655029297);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0e32910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000377655029297);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0e42d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000381469726562);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0e42910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000381469726562);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0e52d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000385284423828);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0e52910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000385284423828);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0e62d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000389099121094);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0e62910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000389099121094);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0e72d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000392913818359);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0e72910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000392913818359);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0e82d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000396728515625);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0e82910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000396728515625);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0e92d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000400543212891);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0e92910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000400543212891);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0ea2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000404357910156);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0ea2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000404357910156);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0eb2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000408172607422);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0eb2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000408172607422);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0ec2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000411987304688);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0ec2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000411987304688);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0ed2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000415802001953);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0ed2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000415802001953);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0ee2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000419616699219);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0ee2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000419616699219);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0ef2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000423431396484);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0ef2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000423431396484);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0f02d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000427246093750);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0f02910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000427246093750);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0f12d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000431060791016);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0f12910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000431060791016);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0f22d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000434875488281);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0f22910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000434875488281);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0f32d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000438690185547);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0f32910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000438690185547);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0f42d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000442504882812);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0f42910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000442504882812);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0f52d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000446319580078);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0f52910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000446319580078);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0f62d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000450134277344);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0f62910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000450134277344);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0f72d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000453948974609);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0f72910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000453948974609);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0f82d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000457763671875);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0f82910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000457763671875);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0f92d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000461578369141);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0f92910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000461578369141);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0fa2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000465393066406);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0fa2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000465393066406);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0fb2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000469207763672);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0fb2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000469207763672);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0fc2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000473022460938);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0fc2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000473022460938);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0fd2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000476837158203);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0fd2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000476837158203);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0fe2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000480651855469);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0fe2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000480651855469);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0ff2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000484466552734);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x0ff2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000484466552734);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1002d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000488281250000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1002910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000488281250000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1012d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000495910644531);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1012910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000495910644531);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1022d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000503540039062);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1022910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000503540039062);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1032d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000511169433594);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1032910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000511169433594);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1042d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000518798828125);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1042910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000518798828125);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1052d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000526428222656);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1052910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000526428222656);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1062d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000534057617188);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1062910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000534057617188);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1072d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000541687011719);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1072910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000541687011719);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1082d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000549316406250);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1082910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000549316406250);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1092d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000556945800781);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1092910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000556945800781);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x10a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000564575195312);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x10a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000564575195312);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x10b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000572204589844);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x10b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000572204589844);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x10c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000579833984375);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x10c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000579833984375);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x10d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000587463378906);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x10d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000587463378906);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x10e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000595092773438);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x10e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000595092773438);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x10f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000602722167969);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x10f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000602722167969);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1102d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000610351562500);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1102910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000610351562500);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1112d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000617980957031);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1112910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000617980957031);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1122d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000625610351562);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1122910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000625610351562);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1132d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000633239746094);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1132910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000633239746094);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1142d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000640869140625);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1142910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000640869140625);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1152d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000648498535156);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1152910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000648498535156);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1162d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000656127929688);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1162910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000656127929688);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1172d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000663757324219);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1172910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000663757324219);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1182d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000671386718750);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1182910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000671386718750);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1192d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000679016113281);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1192910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000679016113281);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x11a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000686645507812);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x11a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000686645507812);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x11b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000694274902344);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x11b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000694274902344);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x11c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000701904296875);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x11c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000701904296875);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x11d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000709533691406);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x11d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000709533691406);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x11e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000717163085938);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x11e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000717163085938);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x11f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000724792480469);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x11f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000724792480469);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1202d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000732421875000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1202910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000732421875000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1212d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000740051269531);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1212910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000740051269531);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1222d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000747680664062);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1222910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000747680664062);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1232d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000755310058594);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1232910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000755310058594);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1242d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000762939453125);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1242910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000762939453125);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1252d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000770568847656);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1252910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000770568847656);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1262d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000778198242188);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1262910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000778198242188);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1272d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000785827636719);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1272910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000785827636719);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1282d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000793457031250);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1282910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000793457031250);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1292d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000801086425781);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1292910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000801086425781);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x12a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000808715820312);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x12a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000808715820312);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x12b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000816345214844);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x12b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000816345214844);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x12c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000823974609375);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x12c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000823974609375);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x12d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000831604003906);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x12d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000831604003906);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x12e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000839233398438);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x12e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000839233398438);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x12f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000846862792969);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x12f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000846862792969);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1302d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000854492187500);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1302910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000854492187500);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1312d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000862121582031);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1312910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000862121582031);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1322d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000869750976562);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1322910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000869750976562);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1332d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000877380371094);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1332910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000877380371094);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1342d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000885009765625);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1342910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000885009765625);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1352d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000892639160156);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1352910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000892639160156);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1362d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000900268554688);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1362910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000900268554688);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1372d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000907897949219);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1372910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000907897949219);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1382d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000915527343750);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1382910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000915527343750);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1392d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000923156738281);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1392910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000923156738281);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x13a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000930786132812);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x13a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000930786132812);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x13b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000938415527344);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x13b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000938415527344);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x13c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000946044921875);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x13c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000946044921875);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x13d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000953674316406);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x13d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000953674316406);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x13e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000961303710938);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x13e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000961303710938);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x13f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000968933105469);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x13f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000968933105469);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1402d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000976562500000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1402910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000976562500000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1412d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.000991821289062);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1412910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.000991821289062);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1422d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.001007080078125);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1422910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.001007080078125);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1432d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.001022338867188);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1432910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.001022338867188);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1442d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.001037597656250);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1442910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.001037597656250);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1452d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.001052856445312);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1452910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.001052856445312);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1462d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.001068115234375);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1462910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.001068115234375);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1472d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.001083374023438);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1472910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.001083374023438);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1482d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.001098632812500);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1482910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.001098632812500);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1492d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.001113891601562);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1492910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.001113891601562);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x14a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.001129150390625);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x14a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.001129150390625);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x14b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.001144409179688);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x14b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.001144409179688);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x14c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.001159667968750);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x14c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.001159667968750);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x14d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.001174926757812);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x14d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.001174926757812);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x14e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.001190185546875);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x14e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.001190185546875);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x14f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.001205444335938);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x14f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.001205444335938);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1502d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.001220703125000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1502910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.001220703125000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1512d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.001235961914062);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1512910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.001235961914062);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1522d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.001251220703125);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1522910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.001251220703125);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1532d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.001266479492188);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1532910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.001266479492188);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1542d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.001281738281250);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1542910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.001281738281250);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1552d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.001296997070312);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1552910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.001296997070312);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1562d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.001312255859375);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1562910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.001312255859375);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1572d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.001327514648438);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1572910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.001327514648438);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1582d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.001342773437500);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1582910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.001342773437500);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1592d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.001358032226562);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1592910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.001358032226562);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x15a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.001373291015625);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x15a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.001373291015625);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x15b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.001388549804688);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x15b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.001388549804688);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x15c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.001403808593750);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x15c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.001403808593750);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x15d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.001419067382812);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x15d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.001419067382812);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x15e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.001434326171875);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x15e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.001434326171875);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x15f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.001449584960938);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x15f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.001449584960938);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1602d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.001464843750000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1602910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.001464843750000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1612d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.001480102539062);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1612910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.001480102539062);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1622d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.001495361328125);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1622910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.001495361328125);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1632d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.001510620117188);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1632910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.001510620117188);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1642d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.001525878906250);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1642910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.001525878906250);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1652d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.001541137695312);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1652910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.001541137695312);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1662d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.001556396484375);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1662910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.001556396484375);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1672d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.001571655273438);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1672910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.001571655273438);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1682d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.001586914062500);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1682910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.001586914062500);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1692d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.001602172851562);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1692910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.001602172851562);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x16a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.001617431640625);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x16a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.001617431640625);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x16b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.001632690429688);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x16b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.001632690429688);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x16c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.001647949218750);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x16c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.001647949218750);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x16d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.001663208007812);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x16d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.001663208007812);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x16e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.001678466796875);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x16e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.001678466796875);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x16f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.001693725585938);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x16f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.001693725585938);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1702d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.001708984375000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1702910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.001708984375000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1712d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.001724243164062);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1712910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.001724243164062);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1722d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.001739501953125);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1722910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.001739501953125);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1732d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.001754760742188);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1732910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.001754760742188);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1742d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.001770019531250);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1742910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.001770019531250);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1752d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.001785278320312);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1752910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.001785278320312);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1762d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.001800537109375);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1762910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.001800537109375);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1772d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.001815795898438);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1772910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.001815795898438);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1782d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.001831054687500);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1782910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.001831054687500);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1792d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.001846313476562);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1792910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.001846313476562);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x17a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.001861572265625);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x17a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.001861572265625);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x17b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.001876831054688);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x17b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.001876831054688);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x17c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.001892089843750);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x17c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.001892089843750);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x17d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.001907348632812);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x17d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.001907348632812);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x17e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.001922607421875);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x17e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.001922607421875);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x17f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.001937866210938);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x17f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.001937866210938);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1802d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.001953125000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1802910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.001953125000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1812d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.001983642578125);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1812910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.001983642578125);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1822d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.002014160156250);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1822910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.002014160156250);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1832d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.002044677734375);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1832910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.002044677734375);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1842d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.002075195312500);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1842910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.002075195312500);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1852d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.002105712890625);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1852910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.002105712890625);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1862d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.002136230468750);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1862910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.002136230468750);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1872d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.002166748046875);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1872910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.002166748046875);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1882d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.002197265625000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1882910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.002197265625000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1892d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.002227783203125);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1892910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.002227783203125);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x18a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.002258300781250);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x18a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.002258300781250);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x18b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.002288818359375);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x18b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.002288818359375);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x18c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.002319335937500);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x18c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.002319335937500);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x18d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.002349853515625);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x18d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.002349853515625);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x18e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.002380371093750);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x18e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.002380371093750);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x18f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.002410888671875);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x18f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.002410888671875);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1902d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.002441406250000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1902910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.002441406250000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1912d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.002471923828125);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1912910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.002471923828125);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1922d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.002502441406250);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1922910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.002502441406250);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1932d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.002532958984375);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1932910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.002532958984375);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1942d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.002563476562500);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1942910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.002563476562500);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1952d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.002593994140625);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1952910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.002593994140625);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1962d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.002624511718750);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1962910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.002624511718750);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1972d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.002655029296875);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1972910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.002655029296875);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1982d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.002685546875000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1982910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.002685546875000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1992d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.002716064453125);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1992910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.002716064453125);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x19a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.002746582031250);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x19a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.002746582031250);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x19b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.002777099609375);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x19b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.002777099609375);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x19c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.002807617187500);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x19c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.002807617187500);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x19d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.002838134765625);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x19d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.002838134765625);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x19e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.002868652343750);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x19e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.002868652343750);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x19f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.002899169921875);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x19f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.002899169921875);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1a02d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.002929687500000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1a02910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.002929687500000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1a12d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.002960205078125);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1a12910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.002960205078125);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1a22d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.002990722656250);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1a22910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.002990722656250);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1a32d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.003021240234375);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1a32910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.003021240234375);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1a42d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.003051757812500);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1a42910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.003051757812500);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1a52d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.003082275390625);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1a52910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.003082275390625);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1a62d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.003112792968750);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1a62910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.003112792968750);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1a72d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.003143310546875);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1a72910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.003143310546875);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1a82d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.003173828125000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1a82910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.003173828125000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1a92d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.003204345703125);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1a92910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.003204345703125);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1aa2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.003234863281250);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1aa2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.003234863281250);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1ab2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.003265380859375);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1ab2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.003265380859375);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1ac2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.003295898437500);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1ac2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.003295898437500);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1ad2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.003326416015625);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1ad2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.003326416015625);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1ae2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.003356933593750);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1ae2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.003356933593750);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1af2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.003387451171875);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1af2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.003387451171875);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1b02d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.003417968750000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1b02910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.003417968750000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1b12d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.003448486328125);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1b12910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.003448486328125);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1b22d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.003479003906250);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1b22910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.003479003906250);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1b32d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.003509521484375);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1b32910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.003509521484375);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1b42d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.003540039062500);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1b42910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.003540039062500);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1b52d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.003570556640625);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1b52910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.003570556640625);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1b62d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.003601074218750);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1b62910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.003601074218750);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1b72d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.003631591796875);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1b72910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.003631591796875);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1b82d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.003662109375000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1b82910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.003662109375000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1b92d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.003692626953125);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1b92910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.003692626953125);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1ba2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.003723144531250);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1ba2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.003723144531250);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1bb2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.003753662109375);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1bb2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.003753662109375);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1bc2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.003784179687500);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1bc2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.003784179687500);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1bd2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.003814697265625);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1bd2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.003814697265625);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1be2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.003845214843750);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1be2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.003845214843750);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1bf2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.003875732421875);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1bf2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.003875732421875);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1c02d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.003906250000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1c02910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.003906250000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1c12d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.003967285156250);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1c12910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.003967285156250);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1c22d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.004028320312500);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1c22910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.004028320312500);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1c32d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.004089355468750);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1c32910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.004089355468750);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1c42d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.004150390625000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1c42910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.004150390625000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1c52d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.004211425781250);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1c52910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.004211425781250);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1c62d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.004272460937500);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1c62910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.004272460937500);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1c72d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.004333496093750);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1c72910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.004333496093750);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1c82d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.004394531250000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1c82910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.004394531250000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1c92d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.004455566406250);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1c92910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.004455566406250);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1ca2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.004516601562500);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1ca2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.004516601562500);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1cb2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.004577636718750);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1cb2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.004577636718750);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1cc2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.004638671875000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1cc2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.004638671875000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1cd2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.004699707031250);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1cd2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.004699707031250);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1ce2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.004760742187500);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1ce2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.004760742187500);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1cf2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.004821777343750);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1cf2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.004821777343750);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1d02d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.004882812500000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1d02910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.004882812500000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1d12d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.004943847656250);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1d12910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.004943847656250);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1d22d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.005004882812500);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1d22910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.005004882812500);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1d32d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.005065917968750);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1d32910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.005065917968750);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1d42d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.005126953125000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1d42910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.005126953125000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1d52d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.005187988281250);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1d52910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.005187988281250);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1d62d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.005249023437500);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1d62910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.005249023437500);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1d72d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.005310058593750);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1d72910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.005310058593750);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1d82d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.005371093750000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1d82910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.005371093750000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1d92d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.005432128906250);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1d92910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.005432128906250);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1da2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.005493164062500);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1da2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.005493164062500);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1db2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.005554199218750);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1db2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.005554199218750);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1dc2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.005615234375000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1dc2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.005615234375000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1dd2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.005676269531250);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1dd2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.005676269531250);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1de2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.005737304687500);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1de2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.005737304687500);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1df2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.005798339843750);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1df2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.005798339843750);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1e02d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.005859375000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1e02910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.005859375000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1e12d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.005920410156250);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1e12910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.005920410156250);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1e22d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.005981445312500);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1e22910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.005981445312500);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1e32d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.006042480468750);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1e32910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.006042480468750);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1e42d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.006103515625000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1e42910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.006103515625000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1e52d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.006164550781250);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1e52910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.006164550781250);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1e62d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.006225585937500);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1e62910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.006225585937500);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1e72d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.006286621093750);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1e72910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.006286621093750);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1e82d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.006347656250000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1e82910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.006347656250000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1e92d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.006408691406250);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1e92910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.006408691406250);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1ea2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.006469726562500);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1ea2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.006469726562500);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1eb2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.006530761718750);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1eb2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.006530761718750);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1ec2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.006591796875000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1ec2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.006591796875000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1ed2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.006652832031250);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1ed2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.006652832031250);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1ee2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.006713867187500);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1ee2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.006713867187500);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1ef2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.006774902343750);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1ef2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.006774902343750);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1f02d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.006835937500000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1f02910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.006835937500000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1f12d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.006896972656250);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1f12910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.006896972656250);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1f22d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.006958007812500);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1f22910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.006958007812500);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1f32d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.007019042968750);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1f32910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.007019042968750);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1f42d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.007080078125000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1f42910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.007080078125000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1f52d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.007141113281250);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1f52910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.007141113281250);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1f62d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.007202148437500);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1f62910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.007202148437500);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1f72d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.007263183593750);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1f72910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.007263183593750);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1f82d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.007324218750000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1f82910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.007324218750000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1f92d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.007385253906250);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1f92910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.007385253906250);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1fa2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.007446289062500);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1fa2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.007446289062500);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1fb2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.007507324218750);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1fb2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.007507324218750);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1fc2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.007568359375000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1fc2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.007568359375000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1fd2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.007629394531250);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1fd2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.007629394531250);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1fe2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.007690429687500);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1fe2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.007690429687500);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1ff2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.007751464843750);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x1ff2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.007751464843750);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2002d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.007812500000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2002910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.007812500000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2012d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.007934570312500);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2012910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.007934570312500);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2022d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.008056640625000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2022910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.008056640625000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2032d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.008178710937500);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2032910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.008178710937500);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2042d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.008300781250000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2042910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.008300781250000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2052d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.008422851562500);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2052910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.008422851562500);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2062d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.008544921875000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2062910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.008544921875000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2072d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.008666992187500);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2072910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.008666992187500);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2082d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.008789062500000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2082910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.008789062500000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2092d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.008911132812500);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2092910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.008911132812500);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x20a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.009033203125000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x20a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.009033203125000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x20b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.009155273437500);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x20b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.009155273437500);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x20c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.009277343750000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x20c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.009277343750000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x20d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.009399414062500);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x20d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.009399414062500);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x20e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.009521484375000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x20e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.009521484375000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x20f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.009643554687500);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x20f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.009643554687500);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2102d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.009765625000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2102910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.009765625000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2112d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.009887695312500);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2112910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.009887695312500);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2122d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.010009765625000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2122910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.010009765625000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2132d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.010131835937500);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2132910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.010131835937500);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2142d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.010253906250000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2142910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.010253906250000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2152d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.010375976562500);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2152910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.010375976562500);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2162d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.010498046875000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2162910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.010498046875000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2172d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.010620117187500);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2172910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.010620117187500);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2182d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.010742187500000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2182910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.010742187500000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2192d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.010864257812500);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2192910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.010864257812500);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x21a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.010986328125000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x21a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.010986328125000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x21b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.011108398437500);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x21b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.011108398437500);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x21c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.011230468750000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x21c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.011230468750000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x21d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.011352539062500);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x21d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.011352539062500);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x21e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.011474609375000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x21e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.011474609375000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x21f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.011596679687500);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x21f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.011596679687500);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2202d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.011718750000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2202910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.011718750000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2212d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.011840820312500);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2212910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.011840820312500);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2222d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.011962890625000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2222910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.011962890625000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2232d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.012084960937500);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2232910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.012084960937500);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2242d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.012207031250000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2242910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.012207031250000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2252d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.012329101562500);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2252910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.012329101562500);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2262d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.012451171875000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2262910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.012451171875000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2272d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.012573242187500);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2272910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.012573242187500);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2282d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.012695312500000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2282910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.012695312500000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2292d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.012817382812500);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2292910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.012817382812500);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x22a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.012939453125000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x22a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.012939453125000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x22b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.013061523437500);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x22b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.013061523437500);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x22c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.013183593750000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x22c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.013183593750000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x22d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.013305664062500);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x22d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.013305664062500);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x22e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.013427734375000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x22e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.013427734375000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x22f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.013549804687500);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x22f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.013549804687500);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2302d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.013671875000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2302910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.013671875000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2312d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.013793945312500);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2312910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.013793945312500);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2322d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.013916015625000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2322910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.013916015625000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2332d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.014038085937500);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2332910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.014038085937500);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2342d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.014160156250000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2342910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.014160156250000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2352d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.014282226562500);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2352910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.014282226562500);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2362d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.014404296875000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2362910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.014404296875000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2372d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.014526367187500);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2372910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.014526367187500);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2382d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.014648437500000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2382910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.014648437500000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2392d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.014770507812500);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2392910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.014770507812500);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x23a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.014892578125000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x23a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.014892578125000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x23b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.015014648437500);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x23b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.015014648437500);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x23c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.015136718750000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x23c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.015136718750000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x23d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.015258789062500);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x23d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.015258789062500);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x23e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.015380859375000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x23e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.015380859375000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x23f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.015502929687500);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x23f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.015502929687500);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2402d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.015625000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2402910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.015625000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2412d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.015869140625000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2412910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.015869140625000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2422d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.016113281250000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2422910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.016113281250000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2432d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.016357421875000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2432910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.016357421875000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2442d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.016601562500000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2442910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.016601562500000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2452d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.016845703125000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2452910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.016845703125000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2462d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.017089843750000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2462910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.017089843750000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2472d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.017333984375000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2472910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.017333984375000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2482d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.017578125000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2482910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.017578125000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2492d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.017822265625000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2492910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.017822265625000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x24a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.018066406250000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x24a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.018066406250000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x24b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.018310546875000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x24b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.018310546875000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x24c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.018554687500000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x24c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.018554687500000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x24d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.018798828125000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x24d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.018798828125000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x24e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.019042968750000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x24e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.019042968750000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x24f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.019287109375000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x24f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.019287109375000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2502d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.019531250000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2502910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.019531250000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2512d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.019775390625000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2512910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.019775390625000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2522d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.020019531250000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2522910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.020019531250000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2532d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.020263671875000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2532910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.020263671875000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2542d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.020507812500000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2542910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.020507812500000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2552d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.020751953125000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2552910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.020751953125000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2562d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.020996093750000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2562910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.020996093750000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2572d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.021240234375000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2572910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.021240234375000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2582d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.021484375000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2582910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.021484375000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2592d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.021728515625000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2592910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.021728515625000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x25a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.021972656250000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x25a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.021972656250000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x25b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.022216796875000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x25b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.022216796875000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x25c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.022460937500000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x25c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.022460937500000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x25d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.022705078125000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x25d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.022705078125000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x25e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.022949218750000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x25e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.022949218750000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x25f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.023193359375000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x25f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.023193359375000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2602d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.023437500000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2602910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.023437500000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2612d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.023681640625000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2612910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.023681640625000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2622d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.023925781250000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2622910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.023925781250000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2632d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.024169921875000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2632910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.024169921875000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2642d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.024414062500000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2642910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.024414062500000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2652d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.024658203125000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2652910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.024658203125000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2662d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.024902343750000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2662910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.024902343750000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2672d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.025146484375000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2672910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.025146484375000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2682d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.025390625000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2682910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.025390625000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2692d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.025634765625000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2692910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.025634765625000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x26a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.025878906250000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x26a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.025878906250000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x26b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.026123046875000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x26b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.026123046875000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x26c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.026367187500000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x26c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.026367187500000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x26d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.026611328125000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x26d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.026611328125000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x26e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.026855468750000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x26e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.026855468750000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x26f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.027099609375000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x26f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.027099609375000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2702d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.027343750000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2702910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.027343750000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2712d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.027587890625000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2712910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.027587890625000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2722d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.027832031250000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2722910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.027832031250000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2732d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.028076171875000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2732910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.028076171875000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2742d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.028320312500000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2742910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.028320312500000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2752d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.028564453125000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2752910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.028564453125000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2762d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.028808593750000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2762910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.028808593750000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2772d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.029052734375000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2772910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.029052734375000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2782d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.029296875000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2782910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.029296875000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2792d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.029541015625000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2792910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.029541015625000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x27a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.029785156250000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x27a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.029785156250000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x27b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.030029296875000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x27b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.030029296875000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x27c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.030273437500000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x27c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.030273437500000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x27d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.030517578125000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x27d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.030517578125000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x27e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.030761718750000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x27e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.030761718750000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x27f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.031005859375000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x27f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.031005859375000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2802d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.031250000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2802910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.031250000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2812d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.031738281250000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2812910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.031738281250000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2822d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.032226562500000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2822910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.032226562500000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2832d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.032714843750000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2832910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.032714843750000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2842d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.033203125000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2842910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.033203125000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2852d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.033691406250000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2852910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.033691406250000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2862d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.034179687500000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2862910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.034179687500000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2872d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.034667968750000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2872910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.034667968750000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2882d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.035156250000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2882910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.035156250000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2892d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.035644531250000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2892910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.035644531250000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x28a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.036132812500000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x28a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.036132812500000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x28b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.036621093750000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x28b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.036621093750000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x28c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.037109375000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x28c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.037109375000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x28d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.037597656250000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x28d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.037597656250000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x28e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.038085937500000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x28e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.038085937500000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x28f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.038574218750000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x28f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.038574218750000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2902d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.039062500000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2902910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.039062500000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2912d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.039550781250000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2912910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.039550781250000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2922d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.040039062500000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2922910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.040039062500000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2932d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.040527343750000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2932910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.040527343750000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2942d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.041015625000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2942910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.041015625000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2952d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.041503906250000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2952910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.041503906250000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2962d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.041992187500000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2962910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.041992187500000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2972d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.042480468750000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2972910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.042480468750000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2982d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.042968750000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2982910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.042968750000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2992d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.043457031250000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2992910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.043457031250000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x29a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.043945312500000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x29a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.043945312500000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x29b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.044433593750000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x29b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.044433593750000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x29c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.044921875000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x29c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.044921875000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x29d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.045410156250000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x29d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.045410156250000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x29e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.045898437500000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x29e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.045898437500000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x29f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.046386718750000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x29f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.046386718750000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2a02d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.046875000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2a02910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.046875000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2a12d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.047363281250000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2a12910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.047363281250000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2a22d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.047851562500000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2a22910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.047851562500000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2a32d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.048339843750000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2a32910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.048339843750000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2a42d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.048828125000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2a42910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.048828125000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2a52d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.049316406250000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2a52910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.049316406250000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2a62d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.049804687500000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2a62910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.049804687500000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2a72d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.050292968750000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2a72910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.050292968750000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2a82d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.050781250000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2a82910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.050781250000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2a92d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.051269531250000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2a92910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.051269531250000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2aa2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.051757812500000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2aa2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.051757812500000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2ab2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.052246093750000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2ab2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.052246093750000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2ac2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.052734375000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2ac2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.052734375000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2ad2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.053222656250000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2ad2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.053222656250000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2ae2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.053710937500000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2ae2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.053710937500000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2af2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.054199218750000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2af2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.054199218750000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2b02d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.054687500000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2b02910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.054687500000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2b12d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.055175781250000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2b12910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.055175781250000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2b22d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.055664062500000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2b22910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.055664062500000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2b32d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.056152343750000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2b32910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.056152343750000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2b42d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.056640625000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2b42910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.056640625000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2b52d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.057128906250000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2b52910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.057128906250000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2b62d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.057617187500000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2b62910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.057617187500000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2b72d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.058105468750000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2b72910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.058105468750000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2b82d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.058593750000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2b82910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.058593750000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2b92d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.059082031250000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2b92910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.059082031250000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2ba2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.059570312500000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2ba2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.059570312500000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2bb2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.060058593750000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2bb2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.060058593750000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2bc2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.060546875000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2bc2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.060546875000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2bd2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.061035156250000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2bd2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.061035156250000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2be2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.061523437500000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2be2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.061523437500000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2bf2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.062011718750000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2bf2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.062011718750000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2c02d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.062500000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2c02910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.062500000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2c12d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.063476562500000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2c12910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.063476562500000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2c22d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.064453125000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2c22910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.064453125000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2c32d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.065429687500000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2c32910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.065429687500000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2c42d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.066406250000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2c42910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.066406250000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2c52d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.067382812500000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2c52910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.067382812500000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2c62d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.068359375000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2c62910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.068359375000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2c72d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.069335937500000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2c72910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.069335937500000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2c82d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.070312500000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2c82910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.070312500000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2c92d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.071289062500000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2c92910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.071289062500000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2ca2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.072265625000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2ca2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.072265625000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2cb2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.073242187500000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2cb2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.073242187500000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2cc2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.074218750000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2cc2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.074218750000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2cd2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.075195312500000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2cd2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.075195312500000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2ce2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.076171875000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2ce2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.076171875000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2cf2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.077148437500000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2cf2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.077148437500000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2d02d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.078125000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2d02910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.078125000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2d12d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.079101562500000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2d12910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.079101562500000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2d22d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.080078125000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2d22910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.080078125000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2d32d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.081054687500000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2d32910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.081054687500000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2d42d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.082031250000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2d42910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.082031250000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2d52d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.083007812500000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2d52910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.083007812500000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2d62d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.083984375000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2d62910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.083984375000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2d72d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.084960937500000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2d72910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.084960937500000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2d82d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.085937500000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2d82910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.085937500000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2d92d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.086914062500000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2d92910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.086914062500000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2da2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.087890625000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2da2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.087890625000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2db2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.088867187500000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2db2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.088867187500000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2dc2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.089843750000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2dc2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.089843750000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2dd2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.090820312500000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2dd2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.090820312500000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2de2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.091796875000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2de2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.091796875000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2df2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.092773437500000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2df2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.092773437500000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2e02d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.093750000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2e02910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.093750000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2e12d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.094726562500000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2e12910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.094726562500000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2e22d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.095703125000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2e22910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.095703125000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2e32d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.096679687500000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2e32910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.096679687500000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2e42d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.097656250000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2e42910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.097656250000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2e52d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.098632812500000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2e52910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.098632812500000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2e62d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.099609375000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2e62910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.099609375000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2e72d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.100585937500000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2e72910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.100585937500000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2e82d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.101562500000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2e82910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.101562500000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2e92d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.102539062500000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2e92910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.102539062500000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2ea2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.103515625000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2ea2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.103515625000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2eb2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.104492187500000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2eb2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.104492187500000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2ec2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.105468750000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2ec2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.105468750000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2ed2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.106445312500000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2ed2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.106445312500000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2ee2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.107421875000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2ee2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.107421875000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2ef2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.108398437500000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2ef2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.108398437500000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2f02d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.109375000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2f02910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.109375000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2f12d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.110351562500000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2f12910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.110351562500000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2f22d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.111328125000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2f22910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.111328125000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2f32d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.112304687500000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2f32910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.112304687500000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2f42d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.113281250000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2f42910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.113281250000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2f52d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.114257812500000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2f52910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.114257812500000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2f62d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.115234375000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2f62910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.115234375000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2f72d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.116210937500000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2f72910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.116210937500000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2f82d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.117187500000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2f82910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.117187500000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2f92d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.118164062500000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2f92910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.118164062500000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2fa2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.119140625000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2fa2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.119140625000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2fb2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.120117187500000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2fb2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.120117187500000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2fc2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.121093750000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2fc2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.121093750000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2fd2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.122070312500000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2fd2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.122070312500000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2fe2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.123046875000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2fe2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.123046875000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2ff2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.124023437500000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x2ff2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.124023437500000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3002d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.125000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3002910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.125000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3012d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.126953125000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3012910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.126953125000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3022d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.128906250000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3022910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.128906250000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3032d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.130859375000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3032910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.130859375000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3042d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.132812500000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3042910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.132812500000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3052d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.134765625000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3052910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.134765625000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3062d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.136718750000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3062910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.136718750000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3072d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.138671875000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3072910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.138671875000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3082d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.140625000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3082910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.140625000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3092d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.142578125000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3092910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.142578125000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x30a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.144531250000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x30a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.144531250000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x30b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.146484375000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x30b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.146484375000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x30c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.148437500000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x30c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.148437500000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x30d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.150390625000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x30d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.150390625000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x30e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.152343750000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x30e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.152343750000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x30f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.154296875000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x30f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.154296875000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3102d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.156250000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3102910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.156250000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3112d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.158203125000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3112910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.158203125000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3122d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.160156250000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3122910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.160156250000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3132d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.162109375000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3132910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.162109375000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3142d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.164062500000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3142910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.164062500000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3152d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.166015625000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3152910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.166015625000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3162d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.167968750000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3162910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.167968750000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3172d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.169921875000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3172910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.169921875000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3182d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.171875000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3182910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.171875000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3192d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.173828125000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3192910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.173828125000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x31a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.175781250000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x31a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.175781250000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x31b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.177734375000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x31b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.177734375000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x31c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.179687500000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x31c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.179687500000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x31d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.181640625000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x31d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.181640625000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x31e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.183593750000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x31e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.183593750000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x31f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.185546875000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x31f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.185546875000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3202d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.187500000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3202910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.187500000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3212d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.189453125000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3212910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.189453125000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3222d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.191406250000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3222910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.191406250000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3232d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.193359375000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3232910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.193359375000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3242d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.195312500000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3242910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.195312500000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3252d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.197265625000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3252910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.197265625000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3262d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.199218750000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3262910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.199218750000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3272d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.201171875000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3272910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.201171875000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3282d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.203125000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3282910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.203125000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3292d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.205078125000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3292910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.205078125000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x32a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.207031250000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x32a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.207031250000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x32b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.208984375000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x32b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.208984375000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x32c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.210937500000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x32c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.210937500000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x32d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.212890625000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x32d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.212890625000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x32e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.214843750000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x32e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.214843750000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x32f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.216796875000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x32f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.216796875000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3302d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.218750000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3302910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.218750000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3312d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.220703125000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3312910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.220703125000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3322d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.222656250000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3322910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.222656250000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3332d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.224609375000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3332910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.224609375000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3342d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.226562500000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3342910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.226562500000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3352d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.228515625000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3352910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.228515625000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3362d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.230468750000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3362910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.230468750000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3372d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.232421875000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3372910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.232421875000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3382d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.234375000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3382910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.234375000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3392d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.236328125000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3392910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.236328125000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x33a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.238281250000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x33a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.238281250000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x33b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.240234375000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x33b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.240234375000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x33c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.242187500000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x33c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.242187500000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x33d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.244140625000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x33d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.244140625000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x33e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.246093750000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x33e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.246093750000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x33f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.248046875000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x33f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.248046875000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3402d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.250000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3402910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.250000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3412d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.253906250000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3412910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.253906250000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3422d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.257812500000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3422910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.257812500000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3432d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.261718750000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3432910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.261718750000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3442d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.265625000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3442910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.265625000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3452d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.269531250000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3452910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.269531250000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3462d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.273437500000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3462910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.273437500000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3472d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.277343750000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3472910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.277343750000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3482d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.281250000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3482910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.281250000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3492d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.285156250000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3492910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.285156250000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x34a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.289062500000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x34a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.289062500000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x34b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.292968750000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x34b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.292968750000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x34c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.296875000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x34c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.296875000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x34d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.300781250000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x34d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.300781250000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x34e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.304687500000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x34e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.304687500000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x34f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.308593750000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x34f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.308593750000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3502d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.312500000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3502910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.312500000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3512d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.316406250000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3512910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.316406250000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3522d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.320312500000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3522910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.320312500000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3532d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.324218750000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3532910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.324218750000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3542d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.328125000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3542910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.328125000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3552d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.332031250000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3552910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.332031250000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3562d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.335937500000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3562910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.335937500000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3572d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.339843750000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3572910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.339843750000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3582d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.343750000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3582910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.343750000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3592d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.347656250000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3592910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.347656250000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x35a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.351562500000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x35a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.351562500000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x35b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.355468750000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x35b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.355468750000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x35c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.359375000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x35c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.359375000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x35d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.363281250000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x35d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.363281250000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x35e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.367187500000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x35e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.367187500000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x35f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.371093750000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x35f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.371093750000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3602d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.375000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3602910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.375000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3612d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.378906250000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3612910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.378906250000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3622d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.382812500000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3622910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.382812500000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3632d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.386718750000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3632910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.386718750000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3642d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.390625000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3642910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.390625000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3652d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.394531250000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3652910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.394531250000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3662d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.398437500000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3662910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.398437500000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3672d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.402343750000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3672910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.402343750000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3682d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.406250000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3682910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.406250000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3692d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.410156250000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3692910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.410156250000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x36a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.414062500000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x36a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.414062500000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x36b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.417968750000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x36b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.417968750000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x36c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.421875000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x36c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.421875000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x36d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.425781250000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x36d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.425781250000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x36e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.429687500000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x36e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.429687500000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x36f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.433593750000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x36f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.433593750000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3702d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.437500000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3702910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.437500000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3712d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.441406250000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3712910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.441406250000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3722d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.445312500000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3722910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.445312500000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3732d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.449218750000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3732910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.449218750000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3742d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.453125000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3742910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.453125000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3752d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.457031250000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3752910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.457031250000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3762d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.460937500000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3762910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.460937500000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3772d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.464843750000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3772910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.464843750000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3782d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.468750000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3782910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.468750000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3792d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.472656250000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3792910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.472656250000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x37a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.476562500000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x37a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.476562500000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x37b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.480468750000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x37b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.480468750000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x37c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.484375000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x37c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.484375000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x37d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.488281250000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x37d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.488281250000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x37e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.492187500000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x37e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.492187500000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x37f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.496093750000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x37f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.496093750000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3802d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.500000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3802910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.500000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3812d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.507812500000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3812910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.507812500000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3822d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.515625000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3822910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.515625000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3832d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.523437500000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3832910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.523437500000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3842d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.531250000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3842910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.531250000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3852d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.539062500000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3852910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.539062500000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3862d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.546875000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3862910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.546875000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3872d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.554687500000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3872910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.554687500000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3882d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.562500000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3882910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.562500000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3892d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.570312500000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3892910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.570312500000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x38a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.578125000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x38a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.578125000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x38b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.585937500000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x38b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.585937500000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x38c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.593750000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x38c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.593750000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x38d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.601562500000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x38d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.601562500000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x38e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.609375000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x38e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.609375000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x38f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.617187500000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x38f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.617187500000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3902d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.625000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3902910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.625000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3912d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.632812500000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3912910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.632812500000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3922d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.640625000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3922910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.640625000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3932d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.648437500000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3932910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.648437500000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3942d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.656250000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3942910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.656250000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3952d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.664062500000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3952910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.664062500000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3962d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.671875000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3962910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.671875000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3972d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.679687500000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3972910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.679687500000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3982d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.687500000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3982910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.687500000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3992d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.695312500000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3992910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.695312500000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x39a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.703125000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x39a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.703125000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x39b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.710937500000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x39b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.710937500000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x39c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.718750000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x39c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.718750000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x39d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.726562500000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x39d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.726562500000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x39e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.734375000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x39e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.734375000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x39f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.742187500000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x39f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.742187500000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3a02d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.750000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3a02910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.750000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3a12d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.757812500000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3a12910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.757812500000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3a22d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.765625000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3a22910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.765625000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3a32d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.773437500000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3a32910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.773437500000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3a42d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.781250000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3a42910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.781250000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3a52d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.789062500000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3a52910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.789062500000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3a62d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.796875000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3a62910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.796875000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3a72d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.804687500000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3a72910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.804687500000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3a82d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.812500000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3a82910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.812500000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3a92d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.820312500000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3a92910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.820312500000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3aa2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.828125000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3aa2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.828125000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3ab2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.835937500000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3ab2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.835937500000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3ac2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.843750000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3ac2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.843750000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3ad2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.851562500000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3ad2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.851562500000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3ae2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.859375000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3ae2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.859375000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3af2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.867187500000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3af2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.867187500000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3b02d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.875000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3b02910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.875000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3b12d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.882812500000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3b12910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.882812500000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3b22d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.890625000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3b22910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.890625000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3b32d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.898437500000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3b32910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.898437500000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3b42d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.906250000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3b42910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.906250000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3b52d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.914062500000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3b52910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.914062500000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3b62d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.921875000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3b62910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.921875000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3b72d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.929687500000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3b72910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.929687500000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3b82d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.937500000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3b82910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.937500000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3b92d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.945312500000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3b92910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.945312500000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3ba2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.953125000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3ba2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.953125000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3bb2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.960937500000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3bb2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.960937500000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3bc2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.968750000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3bc2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.968750000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3bd2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.976562500000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3bd2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.976562500000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3be2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.984375000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3be2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.984375000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3bf2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=0.992187500000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3bf2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==0.992187500000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3c02d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=1.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3c02910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==1.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3c12d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=1.015625000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3c12910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==1.015625000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3c22d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=1.031250000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3c22910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==1.031250000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3c32d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=1.046875000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3c32910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==1.046875000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3c42d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=1.062500000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3c42910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==1.062500000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3c52d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=1.078125000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3c52910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==1.078125000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3c62d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=1.093750000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3c62910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==1.093750000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3c72d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=1.109375000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3c72910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==1.109375000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3c82d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=1.125000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3c82910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==1.125000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3c92d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=1.140625000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3c92910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==1.140625000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3ca2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=1.156250000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3ca2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==1.156250000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3cb2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=1.171875000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3cb2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==1.171875000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3cc2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=1.187500000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3cc2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==1.187500000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3cd2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=1.203125000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3cd2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==1.203125000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3ce2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=1.218750000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3ce2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==1.218750000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3cf2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=1.234375000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3cf2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==1.234375000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3d02d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=1.250000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3d02910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==1.250000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3d12d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=1.265625000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3d12910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==1.265625000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3d22d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=1.281250000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3d22910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==1.281250000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3d32d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=1.296875000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3d32910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==1.296875000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3d42d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=1.312500000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3d42910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==1.312500000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3d52d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=1.328125000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3d52910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==1.328125000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3d62d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=1.343750000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3d62910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==1.343750000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3d72d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=1.359375000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3d72910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==1.359375000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3d82d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=1.375000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3d82910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==1.375000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3d92d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=1.390625000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3d92910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==1.390625000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3da2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=1.406250000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3da2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==1.406250000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3db2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=1.421875000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3db2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==1.421875000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3dc2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=1.437500000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3dc2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==1.437500000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3dd2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=1.453125000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3dd2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==1.453125000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3de2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=1.468750000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3de2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==1.468750000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3df2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=1.484375000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3df2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==1.484375000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3e02d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=1.500000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3e02910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==1.500000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3e12d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=1.515625000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3e12910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==1.515625000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3e22d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=1.531250000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3e22910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==1.531250000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3e32d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=1.546875000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3e32910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==1.546875000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3e42d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=1.562500000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3e42910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==1.562500000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3e52d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=1.578125000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3e52910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==1.578125000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3e62d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=1.593750000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3e62910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==1.593750000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3e72d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=1.609375000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3e72910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==1.609375000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3e82d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=1.625000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3e82910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==1.625000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3e92d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=1.640625000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3e92910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==1.640625000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3ea2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=1.656250000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3ea2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==1.656250000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3eb2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=1.671875000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3eb2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==1.671875000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3ec2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=1.687500000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3ec2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==1.687500000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3ed2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=1.703125000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3ed2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==1.703125000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3ee2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=1.718750000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3ee2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==1.718750000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3ef2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=1.734375000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3ef2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==1.734375000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3f02d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=1.750000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3f02910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==1.750000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3f12d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=1.765625000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3f12910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==1.765625000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3f22d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=1.781250000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3f22910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==1.781250000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3f32d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=1.796875000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3f32910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==1.796875000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3f42d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=1.812500000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3f42910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==1.812500000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3f52d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=1.828125000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3f52910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==1.828125000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3f62d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=1.843750000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3f62910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==1.843750000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3f72d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=1.859375000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3f72910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==1.859375000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3f82d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=1.875000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3f82910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==1.875000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3f92d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=1.890625000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3f92910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==1.890625000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3fa2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=1.906250000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3fa2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==1.906250000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3fb2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=1.921875000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3fb2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==1.921875000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3fc2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=1.937500000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3fc2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==1.937500000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3fd2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=1.953125000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3fd2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==1.953125000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3fe2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=1.968750000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3fe2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==1.968750000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3ff2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=1.984375000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x3ff2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==1.984375000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4002d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=2.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4002910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==2.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4012d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=2.031250000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4012910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==2.031250000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4022d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=2.062500000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4022910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==2.062500000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4032d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=2.093750000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4032910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==2.093750000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4042d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=2.125000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4042910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==2.125000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4052d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=2.156250000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4052910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==2.156250000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4062d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=2.187500000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4062910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==2.187500000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4072d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=2.218750000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4072910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==2.218750000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4082d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=2.250000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4082910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==2.250000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4092d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=2.281250000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4092910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==2.281250000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x40a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=2.312500000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x40a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==2.312500000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x40b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=2.343750000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x40b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==2.343750000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x40c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=2.375000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x40c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==2.375000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x40d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=2.406250000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x40d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==2.406250000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x40e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=2.437500000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x40e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==2.437500000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x40f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=2.468750000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x40f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==2.468750000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4102d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=2.500000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4102910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==2.500000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4112d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=2.531250000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4112910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==2.531250000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4122d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=2.562500000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4122910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==2.562500000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4132d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=2.593750000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4132910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==2.593750000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4142d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=2.625000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4142910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==2.625000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4152d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=2.656250000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4152910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==2.656250000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4162d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=2.687500000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4162910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==2.687500000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4172d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=2.718750000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4172910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==2.718750000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4182d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=2.750000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4182910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==2.750000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4192d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=2.781250000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4192910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==2.781250000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x41a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=2.812500000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x41a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==2.812500000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x41b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=2.843750000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x41b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==2.843750000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x41c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=2.875000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x41c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==2.875000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x41d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=2.906250000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x41d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==2.906250000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x41e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=2.937500000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x41e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==2.937500000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x41f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=2.968750000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x41f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==2.968750000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4202d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=3.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4202910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==3.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4212d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=3.031250000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4212910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==3.031250000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4222d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=3.062500000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4222910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==3.062500000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4232d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=3.093750000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4232910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==3.093750000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4242d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=3.125000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4242910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==3.125000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4252d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=3.156250000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4252910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==3.156250000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4262d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=3.187500000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4262910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==3.187500000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4272d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=3.218750000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4272910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==3.218750000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4282d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=3.250000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4282910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==3.250000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4292d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=3.281250000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4292910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==3.281250000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x42a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=3.312500000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x42a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==3.312500000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x42b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=3.343750000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x42b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==3.343750000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x42c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=3.375000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x42c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==3.375000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x42d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=3.406250000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x42d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==3.406250000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x42e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=3.437500000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x42e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==3.437500000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x42f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=3.468750000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x42f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==3.468750000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4302d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=3.500000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4302910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==3.500000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4312d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=3.531250000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4312910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==3.531250000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4322d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=3.562500000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4322910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==3.562500000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4332d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=3.593750000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4332910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==3.593750000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4342d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=3.625000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4342910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==3.625000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4352d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=3.656250000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4352910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==3.656250000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4362d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=3.687500000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4362910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==3.687500000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4372d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=3.718750000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4372910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==3.718750000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4382d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=3.750000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4382910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==3.750000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4392d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=3.781250000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4392910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==3.781250000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x43a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=3.812500000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x43a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==3.812500000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x43b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=3.843750000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x43b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==3.843750000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x43c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=3.875000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x43c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==3.875000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x43d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=3.906250000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x43d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==3.906250000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x43e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=3.937500000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x43e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==3.937500000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x43f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=3.968750000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x43f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==3.968750000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4402d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=4.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4402910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==4.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4412d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=4.062500000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4412910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==4.062500000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4422d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=4.125000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4422910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==4.125000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4432d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=4.187500000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4432910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==4.187500000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4442d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=4.250000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4442910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==4.250000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4452d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=4.312500000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4452910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==4.312500000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4462d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=4.375000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4462910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==4.375000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4472d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=4.437500000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4472910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==4.437500000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4482d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=4.500000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4482910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==4.500000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4492d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=4.562500000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4492910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==4.562500000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x44a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=4.625000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x44a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==4.625000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x44b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=4.687500000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x44b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==4.687500000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x44c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=4.750000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x44c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==4.750000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x44d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=4.812500000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x44d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==4.812500000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x44e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=4.875000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x44e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==4.875000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x44f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=4.937500000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x44f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==4.937500000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4502d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=5.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4502910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==5.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4512d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=5.062500000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4512910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==5.062500000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4522d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=5.125000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4522910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==5.125000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4532d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=5.187500000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4532910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==5.187500000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4542d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=5.250000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4542910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==5.250000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4552d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=5.312500000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4552910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==5.312500000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4562d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=5.375000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4562910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==5.375000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4572d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=5.437500000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4572910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==5.437500000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4582d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=5.500000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4582910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==5.500000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4592d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=5.562500000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4592910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==5.562500000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x45a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=5.625000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x45a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==5.625000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x45b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=5.687500000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x45b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==5.687500000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x45c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=5.750000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x45c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==5.750000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x45d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=5.812500000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x45d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==5.812500000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x45e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=5.875000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x45e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==5.875000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x45f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=5.937500000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x45f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==5.937500000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4602d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=6.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4602910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==6.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4612d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=6.062500000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4612910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==6.062500000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4622d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=6.125000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4622910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==6.125000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4632d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=6.187500000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4632910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==6.187500000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4642d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=6.250000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4642910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==6.250000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4652d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=6.312500000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4652910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==6.312500000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4662d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=6.375000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4662910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==6.375000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4672d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=6.437500000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4672910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==6.437500000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4682d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=6.500000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4682910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==6.500000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4692d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=6.562500000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4692910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==6.562500000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x46a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=6.625000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x46a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==6.625000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x46b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=6.687500000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x46b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==6.687500000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x46c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=6.750000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x46c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==6.750000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x46d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=6.812500000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x46d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==6.812500000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x46e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=6.875000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x46e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==6.875000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x46f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=6.937500000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x46f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==6.937500000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4702d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=7.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4702910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==7.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4712d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=7.062500000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4712910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==7.062500000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4722d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=7.125000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4722910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==7.125000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4732d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=7.187500000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4732910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==7.187500000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4742d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=7.250000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4742910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==7.250000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4752d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=7.312500000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4752910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==7.312500000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4762d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=7.375000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4762910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==7.375000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4772d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=7.437500000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4772910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==7.437500000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4782d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=7.500000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4782910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==7.500000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4792d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=7.562500000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4792910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==7.562500000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x47a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=7.625000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x47a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==7.625000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x47b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=7.687500000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x47b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==7.687500000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x47c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=7.750000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x47c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==7.750000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x47d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=7.812500000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x47d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==7.812500000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x47e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=7.875000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x47e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==7.875000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x47f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=7.937500000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x47f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==7.937500000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4802d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=8.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4802910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==8.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4812d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=8.125000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4812910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==8.125000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4822d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=8.250000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4822910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==8.250000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4832d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=8.375000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4832910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==8.375000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4842d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=8.500000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4842910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==8.500000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4852d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=8.625000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4852910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==8.625000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4862d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=8.750000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4862910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==8.750000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4872d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=8.875000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4872910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==8.875000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4882d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=9.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4882910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==9.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4892d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=9.125000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4892910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==9.125000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x48a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=9.250000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x48a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==9.250000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x48b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=9.375000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x48b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==9.375000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x48c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=9.500000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x48c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==9.500000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x48d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=9.625000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x48d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==9.625000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x48e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=9.750000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x48e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==9.750000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x48f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=9.875000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x48f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==9.875000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4902d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=10.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4902910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==10.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4912d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=10.125000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4912910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==10.125000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4922d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=10.250000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4922910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==10.250000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4932d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=10.375000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4932910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==10.375000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4942d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=10.500000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4942910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==10.500000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4952d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=10.625000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4952910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==10.625000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4962d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=10.750000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4962910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==10.750000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4972d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=10.875000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4972910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==10.875000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4982d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=11.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4982910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==11.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4992d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=11.125000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4992910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==11.125000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x49a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=11.250000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x49a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==11.250000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x49b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=11.375000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x49b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==11.375000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x49c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=11.500000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x49c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==11.500000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x49d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=11.625000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x49d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==11.625000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x49e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=11.750000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x49e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==11.750000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x49f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=11.875000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x49f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==11.875000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4a02d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=12.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4a02910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==12.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4a12d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=12.125000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4a12910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==12.125000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4a22d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=12.250000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4a22910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==12.250000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4a32d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=12.375000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4a32910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==12.375000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4a42d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=12.500000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4a42910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==12.500000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4a52d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=12.625000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4a52910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==12.625000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4a62d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=12.750000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4a62910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==12.750000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4a72d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=12.875000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4a72910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==12.875000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4a82d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=13.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4a82910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==13.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4a92d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=13.125000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4a92910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==13.125000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4aa2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=13.250000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4aa2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==13.250000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4ab2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=13.375000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4ab2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==13.375000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4ac2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=13.500000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4ac2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==13.500000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4ad2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=13.625000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4ad2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==13.625000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4ae2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=13.750000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4ae2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==13.750000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4af2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=13.875000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4af2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==13.875000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4b02d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=14.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4b02910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==14.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4b12d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=14.125000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4b12910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==14.125000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4b22d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=14.250000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4b22910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==14.250000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4b32d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=14.375000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4b32910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==14.375000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4b42d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=14.500000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4b42910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==14.500000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4b52d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=14.625000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4b52910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==14.625000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4b62d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=14.750000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4b62910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==14.750000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4b72d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=14.875000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4b72910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==14.875000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4b82d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=15.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4b82910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==15.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4b92d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=15.125000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4b92910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==15.125000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4ba2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=15.250000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4ba2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==15.250000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4bb2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=15.375000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4bb2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==15.375000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4bc2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=15.500000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4bc2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==15.500000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4bd2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=15.625000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4bd2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==15.625000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4be2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=15.750000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4be2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==15.750000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4bf2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=15.875000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4bf2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==15.875000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4c02d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=16.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4c02910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==16.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4c12d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=16.250000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4c12910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==16.250000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4c22d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=16.500000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4c22910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==16.500000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4c32d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=16.750000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4c32910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==16.750000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4c42d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=17.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4c42910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==17.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4c52d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=17.250000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4c52910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==17.250000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4c62d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=17.500000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4c62910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==17.500000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4c72d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=17.750000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4c72910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==17.750000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4c82d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=18.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4c82910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==18.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4c92d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=18.250000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4c92910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==18.250000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4ca2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=18.500000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4ca2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==18.500000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4cb2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=18.750000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4cb2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==18.750000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4cc2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=19.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4cc2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==19.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4cd2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=19.250000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4cd2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==19.250000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4ce2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=19.500000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4ce2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==19.500000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4cf2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=19.750000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4cf2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==19.750000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4d02d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=20.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4d02910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==20.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4d12d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=20.250000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4d12910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==20.250000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4d22d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=20.500000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4d22910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==20.500000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4d32d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=20.750000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4d32910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==20.750000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4d42d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=21.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4d42910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==21.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4d52d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=21.250000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4d52910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==21.250000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4d62d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=21.500000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4d62910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==21.500000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4d72d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=21.750000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4d72910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==21.750000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4d82d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=22.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4d82910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==22.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4d92d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=22.250000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4d92910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==22.250000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4da2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=22.500000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4da2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==22.500000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4db2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=22.750000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4db2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==22.750000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4dc2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=23.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4dc2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==23.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4dd2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=23.250000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4dd2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==23.250000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4de2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=23.500000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4de2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==23.500000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4df2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=23.750000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4df2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==23.750000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4e02d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=24.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4e02910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==24.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4e12d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=24.250000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4e12910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==24.250000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4e22d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=24.500000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4e22910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==24.500000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4e32d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=24.750000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4e32910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==24.750000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4e42d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=25.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4e42910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==25.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4e52d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=25.250000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4e52910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==25.250000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4e62d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=25.500000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4e62910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==25.500000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4e72d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=25.750000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4e72910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==25.750000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4e82d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=26.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4e82910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==26.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4e92d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=26.250000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4e92910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==26.250000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4ea2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=26.500000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4ea2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==26.500000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4eb2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=26.750000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4eb2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==26.750000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4ec2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=27.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4ec2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==27.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4ed2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=27.250000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4ed2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==27.250000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4ee2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=27.500000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4ee2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==27.500000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4ef2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=27.750000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4ef2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==27.750000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4f02d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=28.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4f02910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==28.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4f12d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=28.250000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4f12910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==28.250000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4f22d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=28.500000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4f22910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==28.500000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4f32d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=28.750000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4f32910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==28.750000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4f42d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=29.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4f42910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==29.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4f52d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=29.250000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4f52910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==29.250000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4f62d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=29.500000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4f62910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==29.500000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4f72d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=29.750000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4f72910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==29.750000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4f82d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=30.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4f82910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==30.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4f92d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=30.250000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4f92910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==30.250000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4fa2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=30.500000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4fa2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==30.500000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4fb2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=30.750000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4fb2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==30.750000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4fc2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=31.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4fc2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==31.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4fd2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=31.250000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4fd2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==31.250000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4fe2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=31.500000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4fe2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==31.500000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4ff2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=31.750000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x4ff2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==31.750000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5002d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=32.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5002910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==32.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5012d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=32.500000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5012910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==32.500000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5022d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=33.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5022910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==33.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5032d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=33.500000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5032910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==33.500000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5042d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=34.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5042910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==34.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5052d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=34.500000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5052910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==34.500000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5062d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=35.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5062910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==35.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5072d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=35.500000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5072910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==35.500000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5082d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=36.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5082910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==36.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5092d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=36.500000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5092910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==36.500000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x50a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=37.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x50a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==37.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x50b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=37.500000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x50b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==37.500000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x50c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=38.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x50c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==38.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x50d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=38.500000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x50d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==38.500000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x50e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=39.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x50e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==39.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x50f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=39.500000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x50f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==39.500000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5102d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=40.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5102910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==40.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5112d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=40.500000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5112910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==40.500000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5122d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=41.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5122910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==41.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5132d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=41.500000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5132910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==41.500000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5142d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=42.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5142910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==42.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5152d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=42.500000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5152910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==42.500000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5162d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=43.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5162910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==43.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5172d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=43.500000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5172910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==43.500000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5182d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=44.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5182910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==44.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5192d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=44.500000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5192910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==44.500000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x51a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=45.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x51a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==45.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x51b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=45.500000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x51b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==45.500000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x51c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=46.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x51c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==46.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x51d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=46.500000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x51d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==46.500000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x51e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=47.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x51e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==47.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x51f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=47.500000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x51f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==47.500000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5202d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=48.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5202910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==48.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5212d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=48.500000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5212910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==48.500000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5222d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=49.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5222910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==49.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5232d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=49.500000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5232910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==49.500000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5242d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=50.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5242910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==50.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5252d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=50.500000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5252910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==50.500000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5262d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=51.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5262910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==51.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5272d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=51.500000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5272910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==51.500000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5282d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=52.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5282910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==52.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5292d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=52.500000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5292910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==52.500000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x52a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=53.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x52a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==53.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x52b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=53.500000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x52b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==53.500000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x52c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=54.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x52c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==54.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x52d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=54.500000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x52d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==54.500000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x52e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=55.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x52e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==55.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x52f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=55.500000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x52f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==55.500000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5302d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=56.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5302910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==56.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5312d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=56.500000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5312910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==56.500000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5322d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=57.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5322910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==57.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5332d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=57.500000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5332910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==57.500000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5342d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=58.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5342910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==58.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5352d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=58.500000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5352910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==58.500000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5362d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=59.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5362910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==59.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5372d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=59.500000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5372910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==59.500000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5382d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=60.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5382910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==60.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5392d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=60.500000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5392910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==60.500000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x53a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=61.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x53a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==61.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x53b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=61.500000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x53b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==61.500000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x53c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=62.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x53c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==62.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x53d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=62.500000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x53d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==62.500000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x53e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=63.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x53e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==63.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x53f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=63.500000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x53f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==63.500000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5402d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=64.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5402910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==64.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5412d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=65.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5412910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==65.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5422d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=66.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5422910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==66.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5432d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=67.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5432910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==67.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5442d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=68.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5442910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==68.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5452d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=69.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5452910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==69.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5462d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=70.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5462910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==70.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5472d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=71.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5472910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==71.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5482d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=72.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5482910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==72.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5492d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=73.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5492910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==73.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x54a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=74.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x54a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==74.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x54b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=75.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x54b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==75.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x54c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=76.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x54c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==76.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x54d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=77.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x54d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==77.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x54e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=78.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x54e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==78.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x54f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=79.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x54f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==79.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5502d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=80.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5502910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==80.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5512d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=81.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5512910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==81.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5522d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=82.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5522910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==82.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5532d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=83.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5532910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==83.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5542d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=84.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5542910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==84.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5552d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=85.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5552910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==85.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5562d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=86.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5562910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==86.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5572d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=87.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5572910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==87.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5582d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=88.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5582910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==88.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5592d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=89.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5592910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==89.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x55a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=90.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x55a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==90.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x55b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=91.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x55b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==91.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x55c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=92.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x55c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==92.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x55d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=93.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x55d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==93.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x55e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=94.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x55e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==94.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x55f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=95.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x55f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==95.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5602d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=96.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5602910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==96.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5612d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=97.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5612910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==97.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5622d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=98.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5622910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==98.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5632d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=99.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5632910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==99.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5642d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=100.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5642910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==100.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5652d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=101.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5652910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==101.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5662d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=102.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5662910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==102.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5672d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=103.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5672910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==103.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5682d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=104.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5682910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==104.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5692d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=105.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5692910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==105.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x56a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=106.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x56a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==106.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x56b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=107.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x56b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==107.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x56c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=108.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x56c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==108.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x56d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=109.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x56d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==109.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x56e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=110.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x56e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==110.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x56f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=111.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x56f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==111.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5702d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=112.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5702910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==112.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5712d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=113.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5712910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==113.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5722d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=114.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5722910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==114.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5732d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=115.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5732910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==115.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5742d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=116.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5742910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==116.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5752d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=117.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5752910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==117.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5762d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=118.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5762910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==118.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5772d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=119.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5772910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==119.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5782d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=120.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5782910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==120.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5792d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=121.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5792910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==121.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x57a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=122.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x57a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==122.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x57b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=123.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x57b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==123.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x57c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=124.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x57c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==124.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x57d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=125.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x57d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==125.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x57e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=126.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x57e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==126.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x57f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=127.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x57f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==127.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5802d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=128.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5802910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==128.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5812d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=130.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5812910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==130.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5822d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=132.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5822910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==132.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5832d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=134.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5832910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==134.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5842d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=136.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5842910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==136.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5852d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=138.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5852910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==138.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5862d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=140.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5862910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==140.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5872d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=142.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5872910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==142.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5882d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=144.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5882910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==144.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5892d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=146.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5892910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==146.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x58a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=148.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x58a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==148.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x58b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=150.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x58b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==150.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x58c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=152.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x58c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==152.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x58d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=154.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x58d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==154.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x58e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=156.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x58e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==156.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x58f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=158.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x58f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==158.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5902d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=160.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5902910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==160.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5912d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=162.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5912910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==162.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5922d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=164.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5922910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==164.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5932d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=166.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5932910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==166.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5942d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=168.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5942910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==168.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5952d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=170.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5952910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==170.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5962d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=172.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5962910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==172.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5972d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=174.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5972910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==174.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5982d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=176.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5982910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==176.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5992d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=178.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5992910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==178.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x59a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=180.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x59a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==180.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x59b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=182.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x59b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==182.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x59c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=184.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x59c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==184.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x59d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=186.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x59d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==186.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x59e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=188.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x59e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==188.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x59f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=190.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x59f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==190.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5a02d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=192.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5a02910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==192.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5a12d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=194.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5a12910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==194.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5a22d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=196.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5a22910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==196.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5a32d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=198.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5a32910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==198.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5a42d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=200.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5a42910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==200.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5a52d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=202.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5a52910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==202.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5a62d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=204.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5a62910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==204.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5a72d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=206.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5a72910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==206.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5a82d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=208.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5a82910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==208.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5a92d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=210.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5a92910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==210.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5aa2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=212.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5aa2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==212.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5ab2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=214.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5ab2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==214.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5ac2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=216.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5ac2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==216.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5ad2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=218.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5ad2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==218.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5ae2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=220.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5ae2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==220.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5af2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=222.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5af2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==222.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5b02d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=224.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5b02910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==224.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5b12d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=226.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5b12910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==226.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5b22d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=228.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5b22910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==228.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5b32d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=230.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5b32910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==230.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5b42d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=232.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5b42910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==232.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5b52d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=234.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5b52910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==234.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5b62d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=236.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5b62910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==236.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5b72d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=238.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5b72910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==238.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5b82d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=240.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5b82910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==240.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5b92d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=242.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5b92910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==242.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5ba2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=244.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5ba2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==244.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5bb2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=246.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5bb2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==246.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5bc2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=248.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5bc2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==248.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5bd2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=250.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5bd2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==250.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5be2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=252.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5be2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==252.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5bf2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=254.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5bf2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==254.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5c02d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=256.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5c02910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==256.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5c12d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=260.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5c12910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==260.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5c22d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=264.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5c22910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==264.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5c32d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=268.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5c32910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==268.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5c42d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=272.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5c42910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==272.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5c52d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=276.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5c52910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==276.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5c62d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=280.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5c62910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==280.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5c72d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=284.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5c72910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==284.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5c82d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=288.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5c82910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==288.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5c92d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=292.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5c92910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==292.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5ca2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=296.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5ca2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==296.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5cb2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=300.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5cb2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==300.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5cc2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=304.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5cc2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==304.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5cd2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=308.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5cd2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==308.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5ce2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=312.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5ce2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==312.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5cf2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=316.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5cf2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==316.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5d02d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=320.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5d02910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==320.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5d12d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=324.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5d12910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==324.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5d22d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=328.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5d22910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==328.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5d32d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=332.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5d32910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==332.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5d42d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=336.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5d42910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==336.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5d52d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=340.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5d52910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==340.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5d62d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=344.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5d62910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==344.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5d72d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=348.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5d72910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==348.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5d82d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=352.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5d82910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==352.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5d92d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=356.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5d92910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==356.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5da2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=360.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5da2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==360.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5db2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=364.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5db2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==364.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5dc2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=368.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5dc2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==368.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5dd2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=372.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5dd2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==372.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5de2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=376.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5de2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==376.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5df2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=380.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5df2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==380.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5e02d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=384.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5e02910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==384.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5e12d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=388.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5e12910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==388.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5e22d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=392.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5e22910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==392.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5e32d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=396.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5e32910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==396.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5e42d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=400.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5e42910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==400.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5e52d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=404.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5e52910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==404.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5e62d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=408.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5e62910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==408.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5e72d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=412.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5e72910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==412.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5e82d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=416.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5e82910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==416.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5e92d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=420.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5e92910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==420.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5ea2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=424.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5ea2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==424.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5eb2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=428.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5eb2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==428.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5ec2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=432.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5ec2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==432.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5ed2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=436.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5ed2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==436.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5ee2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=440.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5ee2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==440.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5ef2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=444.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5ef2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==444.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5f02d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=448.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5f02910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==448.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5f12d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=452.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5f12910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==452.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5f22d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=456.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5f22910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==456.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5f32d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=460.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5f32910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==460.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5f42d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=464.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5f42910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==464.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5f52d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=468.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5f52910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==468.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5f62d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=472.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5f62910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==472.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5f72d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=476.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5f72910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==476.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5f82d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=480.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5f82910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==480.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5f92d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=484.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5f92910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==484.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5fa2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=488.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5fa2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==488.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5fb2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=492.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5fb2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==492.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5fc2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=496.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5fc2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==496.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5fd2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=500.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5fd2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==500.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5fe2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=504.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5fe2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==504.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5ff2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=508.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x5ff2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==508.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6002d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=512.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6002910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==512.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6012d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=520.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6012910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==520.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6022d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=528.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6022910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==528.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6032d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=536.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6032910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==536.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6042d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=544.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6042910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==544.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6052d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=552.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6052910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==552.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6062d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=560.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6062910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==560.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6072d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=568.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6072910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==568.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6082d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=576.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6082910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==576.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6092d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=584.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6092910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==584.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x60a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=592.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x60a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==592.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x60b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=600.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x60b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==600.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x60c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=608.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x60c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==608.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x60d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=616.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x60d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==616.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x60e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=624.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x60e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==624.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x60f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=632.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x60f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==632.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6102d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=640.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6102910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==640.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6112d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=648.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6112910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==648.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6122d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=656.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6122910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==656.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6132d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=664.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6132910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==664.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6142d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=672.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6142910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==672.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6152d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=680.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6152910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==680.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6162d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=688.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6162910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==688.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6172d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=696.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6172910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==696.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6182d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=704.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6182910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==704.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6192d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=712.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6192910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==712.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x61a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=720.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x61a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==720.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x61b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=728.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x61b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==728.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x61c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=736.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x61c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==736.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x61d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=744.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x61d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==744.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x61e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=752.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x61e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==752.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x61f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=760.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x61f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==760.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6202d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=768.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6202910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==768.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6212d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=776.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6212910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==776.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6222d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=784.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6222910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==784.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6232d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=792.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6232910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==792.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6242d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=800.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6242910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==800.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6252d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=808.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6252910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==808.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6262d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=816.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6262910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==816.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6272d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=824.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6272910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==824.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6282d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=832.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6282910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==832.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6292d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=840.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6292910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==840.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x62a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=848.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x62a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==848.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x62b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=856.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x62b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==856.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x62c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=864.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x62c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==864.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x62d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=872.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x62d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==872.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x62e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=880.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x62e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==880.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x62f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=888.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x62f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==888.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6302d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=896.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6302910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==896.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6312d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=904.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6312910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==904.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6322d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=912.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6322910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==912.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6332d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=920.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6332910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==920.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6342d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=928.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6342910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==928.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6352d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=936.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6352910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==936.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6362d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=944.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6362910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==944.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6372d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=952.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6372910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==952.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6382d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=960.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6382910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==960.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6392d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=968.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6392910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==968.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x63a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=976.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x63a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==976.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x63b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=984.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x63b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==984.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x63c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=992.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x63c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==992.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x63d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=1000.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x63d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==1000.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x63e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=1008.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x63e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==1008.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x63f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=1016.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x63f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==1016.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6402d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=1024.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6402910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==1024.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6412d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=1040.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6412910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==1040.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6422d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=1056.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6422910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==1056.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6432d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=1072.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6432910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==1072.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6442d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=1088.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6442910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==1088.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6452d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=1104.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6452910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==1104.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6462d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=1120.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6462910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==1120.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6472d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=1136.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6472910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==1136.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6482d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=1152.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6482910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==1152.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6492d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=1168.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6492910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==1168.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x64a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=1184.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x64a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==1184.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x64b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=1200.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x64b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==1200.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x64c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=1216.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x64c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==1216.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x64d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=1232.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x64d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==1232.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x64e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=1248.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x64e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==1248.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x64f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=1264.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x64f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==1264.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6502d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=1280.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6502910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==1280.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6512d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=1296.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6512910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==1296.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6522d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=1312.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6522910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==1312.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6532d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=1328.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6532910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==1328.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6542d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=1344.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6542910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==1344.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6552d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=1360.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6552910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==1360.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6562d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=1376.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6562910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==1376.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6572d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=1392.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6572910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==1392.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6582d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=1408.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6582910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==1408.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6592d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=1424.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6592910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==1424.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x65a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=1440.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x65a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==1440.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x65b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=1456.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x65b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==1456.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x65c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=1472.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x65c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==1472.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x65d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=1488.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x65d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==1488.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x65e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=1504.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x65e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==1504.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x65f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=1520.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x65f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==1520.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6602d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=1536.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6602910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==1536.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6612d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=1552.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6612910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==1552.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6622d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=1568.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6622910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==1568.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6632d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=1584.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6632910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==1584.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6642d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=1600.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6642910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==1600.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6652d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=1616.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6652910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==1616.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6662d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=1632.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6662910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==1632.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6672d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=1648.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6672910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==1648.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6682d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=1664.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6682910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==1664.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6692d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=1680.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6692910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==1680.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x66a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=1696.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x66a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==1696.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x66b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=1712.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x66b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==1712.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x66c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=1728.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x66c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==1728.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x66d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=1744.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x66d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==1744.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x66e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=1760.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x66e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==1760.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x66f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=1776.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x66f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==1776.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6702d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=1792.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6702910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==1792.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6712d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=1808.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6712910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==1808.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6722d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=1824.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6722910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==1824.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6732d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=1840.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6732910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==1840.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6742d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=1856.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6742910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==1856.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6752d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=1872.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6752910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==1872.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6762d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=1888.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6762910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==1888.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6772d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=1904.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6772910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==1904.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6782d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=1920.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6782910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==1920.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6792d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=1936.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6792910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==1936.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x67a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=1952.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x67a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==1952.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x67b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=1968.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x67b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==1968.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x67c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=1984.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x67c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==1984.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x67d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=2000.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x67d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==2000.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x67e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=2016.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x67e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==2016.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x67f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=2032.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x67f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==2032.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6802d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=2048.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6802910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==2048.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6812d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=2080.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6812910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==2080.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6822d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=2112.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6822910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==2112.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6832d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=2144.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6832910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==2144.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6842d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=2176.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6842910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==2176.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6852d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=2208.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6852910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==2208.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6862d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=2240.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6862910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==2240.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6872d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=2272.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6872910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==2272.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6882d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=2304.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6882910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==2304.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6892d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=2336.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6892910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==2336.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x68a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=2368.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x68a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==2368.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x68b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=2400.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x68b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==2400.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x68c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=2432.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x68c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==2432.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x68d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=2464.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x68d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==2464.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x68e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=2496.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x68e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==2496.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x68f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=2528.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x68f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==2528.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6902d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=2560.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6902910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==2560.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6912d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=2592.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6912910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==2592.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6922d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=2624.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6922910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==2624.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6932d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=2656.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6932910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==2656.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6942d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=2688.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6942910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==2688.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6952d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=2720.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6952910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==2720.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6962d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=2752.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6962910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==2752.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6972d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=2784.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6972910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==2784.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6982d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=2816.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6982910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==2816.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6992d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=2848.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6992910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==2848.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x69a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=2880.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x69a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==2880.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x69b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=2912.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x69b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==2912.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x69c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=2944.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x69c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==2944.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x69d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=2976.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x69d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==2976.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x69e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=3008.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x69e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==3008.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x69f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=3040.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x69f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==3040.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6a02d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=3072.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6a02910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==3072.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6a12d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=3104.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6a12910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==3104.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6a22d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=3136.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6a22910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==3136.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6a32d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=3168.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6a32910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==3168.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6a42d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=3200.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6a42910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==3200.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6a52d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=3232.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6a52910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==3232.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6a62d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=3264.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6a62910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==3264.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6a72d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=3296.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6a72910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==3296.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6a82d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=3328.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6a82910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==3328.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6a92d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=3360.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6a92910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==3360.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6aa2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=3392.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6aa2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==3392.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6ab2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=3424.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6ab2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==3424.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6ac2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=3456.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6ac2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==3456.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6ad2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=3488.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6ad2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==3488.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6ae2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=3520.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6ae2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==3520.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6af2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=3552.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6af2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==3552.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6b02d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=3584.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6b02910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==3584.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6b12d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=3616.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6b12910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==3616.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6b22d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=3648.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6b22910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==3648.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6b32d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=3680.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6b32910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==3680.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6b42d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=3712.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6b42910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==3712.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6b52d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=3744.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6b52910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==3744.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6b62d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=3776.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6b62910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==3776.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6b72d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=3808.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6b72910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==3808.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6b82d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=3840.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6b82910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==3840.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6b92d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=3872.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6b92910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==3872.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6ba2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=3904.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6ba2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==3904.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6bb2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=3936.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6bb2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==3936.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6bc2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=3968.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6bc2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==3968.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6bd2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=4000.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6bd2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==4000.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6be2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=4032.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6be2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==4032.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6bf2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=4064.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6bf2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==4064.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6c02d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=4096.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6c02910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==4096.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6c12d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=4160.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6c12910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==4160.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6c22d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=4224.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6c22910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==4224.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6c32d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=4288.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6c32910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==4288.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6c42d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=4352.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6c42910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==4352.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6c52d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=4416.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6c52910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==4416.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6c62d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=4480.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6c62910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==4480.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6c72d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=4544.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6c72910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==4544.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6c82d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=4608.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6c82910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==4608.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6c92d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=4672.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6c92910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==4672.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6ca2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=4736.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6ca2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==4736.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6cb2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=4800.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6cb2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==4800.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6cc2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=4864.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6cc2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==4864.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6cd2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=4928.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6cd2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==4928.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6ce2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=4992.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6ce2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==4992.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6cf2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=5056.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6cf2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==5056.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6d02d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=5120.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6d02910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==5120.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6d12d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=5184.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6d12910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==5184.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6d22d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=5248.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6d22910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==5248.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6d32d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=5312.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6d32910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==5312.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6d42d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=5376.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6d42910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==5376.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6d52d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=5440.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6d52910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==5440.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6d62d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=5504.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6d62910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==5504.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6d72d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=5568.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6d72910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==5568.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6d82d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=5632.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6d82910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==5632.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6d92d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=5696.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6d92910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==5696.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6da2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=5760.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6da2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==5760.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6db2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=5824.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6db2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==5824.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6dc2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=5888.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6dc2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==5888.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6dd2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=5952.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6dd2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==5952.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6de2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=6016.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6de2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==6016.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6df2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=6080.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6df2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==6080.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6e02d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=6144.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6e02910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==6144.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6e12d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=6208.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6e12910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==6208.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6e22d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=6272.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6e22910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==6272.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6e32d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=6336.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6e32910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==6336.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6e42d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=6400.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6e42910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==6400.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6e52d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=6464.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6e52910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==6464.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6e62d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=6528.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6e62910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==6528.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6e72d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=6592.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6e72910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==6592.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6e82d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=6656.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6e82910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==6656.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6e92d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=6720.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6e92910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==6720.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6ea2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=6784.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6ea2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==6784.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6eb2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=6848.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6eb2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==6848.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6ec2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=6912.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6ec2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==6912.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6ed2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=6976.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6ed2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==6976.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6ee2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=7040.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6ee2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==7040.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6ef2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=7104.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6ef2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==7104.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6f02d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=7168.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6f02910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==7168.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6f12d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=7232.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6f12910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==7232.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6f22d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=7296.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6f22910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==7296.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6f32d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=7360.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6f32910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==7360.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6f42d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=7424.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6f42910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==7424.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6f52d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=7488.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6f52910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==7488.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6f62d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=7552.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6f62910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==7552.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6f72d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=7616.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6f72910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==7616.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6f82d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=7680.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6f82910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==7680.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6f92d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=7744.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6f92910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==7744.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6fa2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=7808.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6fa2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==7808.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6fb2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=7872.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6fb2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==7872.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6fc2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=7936.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6fc2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==7936.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6fd2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=8000.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6fd2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==8000.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6fe2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=8064.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6fe2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==8064.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6ff2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=8128.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x6ff2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==8128.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7002d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=8192.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7002910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==8192.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7012d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=8320.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7012910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==8320.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7022d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=8448.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7022910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==8448.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7032d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=8576.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7032910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==8576.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7042d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=8704.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7042910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==8704.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7052d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=8832.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7052910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==8832.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7062d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=8960.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7062910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==8960.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7072d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=9088.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7072910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==9088.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7082d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=9216.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7082910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==9216.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7092d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=9344.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7092910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==9344.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x70a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=9472.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x70a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==9472.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x70b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=9600.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x70b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==9600.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x70c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=9728.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x70c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==9728.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x70d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=9856.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x70d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==9856.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x70e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=9984.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x70e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==9984.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x70f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=10112.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x70f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==10112.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7102d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=10240.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7102910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==10240.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7112d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=10368.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7112910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==10368.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7122d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=10496.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7122910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==10496.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7132d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=10624.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7132910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==10624.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7142d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=10752.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7142910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==10752.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7152d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=10880.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7152910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==10880.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7162d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=11008.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7162910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==11008.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7172d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=11136.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7172910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==11136.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7182d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=11264.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7182910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==11264.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7192d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=11392.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7192910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==11392.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x71a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=11520.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x71a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==11520.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x71b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=11648.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x71b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==11648.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x71c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=11776.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x71c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==11776.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x71d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=11904.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x71d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==11904.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x71e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=12032.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x71e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==12032.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x71f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=12160.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x71f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==12160.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7202d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=12288.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7202910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==12288.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7212d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=12416.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7212910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==12416.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7222d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=12544.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7222910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==12544.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7232d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=12672.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7232910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==12672.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7242d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=12800.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7242910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==12800.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7252d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=12928.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7252910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==12928.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7262d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=13056.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7262910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==13056.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7272d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=13184.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7272910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==13184.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7282d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=13312.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7282910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==13312.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7292d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=13440.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7292910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==13440.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x72a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=13568.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x72a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==13568.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x72b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=13696.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x72b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==13696.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x72c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=13824.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x72c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==13824.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x72d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=13952.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x72d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==13952.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x72e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=14080.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x72e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==14080.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x72f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=14208.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x72f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==14208.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7302d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=14336.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7302910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==14336.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7312d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=14464.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7312910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==14464.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7322d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=14592.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7322910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==14592.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7332d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=14720.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7332910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==14720.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7342d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=14848.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7342910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==14848.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7352d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=14976.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7352910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==14976.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7362d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=15104.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7362910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==15104.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7372d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=15232.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7372910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==15232.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7382d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=15360.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7382910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==15360.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7392d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=15488.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7392910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==15488.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x73a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=15616.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x73a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==15616.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x73b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=15744.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x73b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==15744.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x73c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=15872.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x73c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==15872.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x73d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=16000.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x73d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==16000.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x73e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=16128.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x73e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==16128.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x73f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=16256.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x73f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==16256.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7402d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=16384.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7402910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==16384.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7412d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=16640.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7412910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==16640.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7422d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=16896.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7422910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==16896.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7432d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=17152.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7432910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==17152.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7442d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=17408.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7442910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==17408.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7452d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=17664.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7452910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==17664.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7462d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=17920.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7462910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==17920.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7472d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=18176.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7472910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==18176.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7482d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=18432.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7482910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==18432.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7492d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=18688.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7492910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==18688.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x74a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=18944.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x74a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==18944.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x74b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=19200.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x74b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==19200.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x74c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=19456.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x74c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==19456.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x74d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=19712.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x74d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==19712.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x74e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=19968.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x74e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==19968.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x74f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=20224.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x74f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==20224.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7502d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=20480.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7502910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==20480.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7512d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=20736.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7512910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==20736.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7522d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=20992.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7522910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==20992.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7532d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=21248.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7532910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==21248.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7542d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=21504.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7542910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==21504.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7552d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=21760.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7552910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==21760.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7562d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=22016.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7562910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==22016.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7572d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=22272.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7572910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==22272.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7582d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=22528.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7582910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==22528.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7592d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=22784.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7592910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==22784.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x75a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=23040.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x75a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==23040.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x75b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=23296.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x75b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==23296.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x75c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=23552.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x75c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==23552.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x75d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=23808.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x75d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==23808.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x75e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=24064.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x75e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==24064.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x75f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=24320.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x75f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==24320.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7602d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=24576.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7602910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==24576.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7612d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=24832.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7612910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==24832.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7622d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=25088.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7622910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==25088.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7632d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=25344.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7632910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==25344.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7642d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=25600.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7642910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==25600.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7652d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=25856.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7652910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==25856.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7662d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=26112.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7662910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==26112.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7672d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=26368.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7672910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==26368.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7682d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=26624.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7682910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==26624.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7692d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=26880.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7692910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==26880.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x76a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=27136.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x76a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==27136.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x76b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=27392.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x76b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==27392.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x76c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=27648.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x76c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==27648.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x76d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=27904.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x76d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==27904.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x76e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=28160.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x76e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==28160.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x76f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=28416.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x76f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==28416.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7702d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=28672.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7702910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==28672.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7712d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=28928.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7712910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==28928.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7722d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=29184.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7722910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==29184.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7732d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=29440.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7732910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==29440.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7742d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=29696.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7742910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==29696.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7752d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=29952.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7752910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==29952.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7762d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=30208.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7762910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==30208.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7772d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=30464.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7772910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==30464.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7782d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=30720.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7782910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==30720.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7792d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=30976.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7792910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==30976.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x77a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=31232.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x77a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==31232.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x77b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=31488.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x77b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==31488.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x77c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=31744.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x77c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==31744.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x77d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=32000.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x77d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==32000.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x77e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=32256.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x77e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==32256.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x77f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=32512.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x77f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==32512.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7802d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=32768.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7802910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==32768.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7812d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=33280.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7812910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==33280.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7822d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=33792.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7822910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==33792.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7832d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=34304.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7832910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==34304.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7842d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=34816.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7842910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==34816.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7852d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=35328.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7852910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==35328.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7862d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=35840.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7862910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==35840.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7872d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=36352.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7872910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==36352.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7882d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=36864.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7882910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==36864.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7892d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=37376.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7892910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==37376.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x78a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=37888.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x78a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==37888.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x78b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=38400.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x78b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==38400.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x78c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=38912.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x78c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==38912.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x78d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=39424.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x78d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==39424.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x78e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=39936.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x78e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==39936.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x78f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=40448.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x78f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==40448.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7902d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=40960.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7902910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==40960.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7912d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=41472.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7912910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==41472.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7922d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=41984.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7922910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==41984.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7932d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=42496.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7932910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==42496.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7942d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=43008.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7942910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==43008.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7952d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=43520.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7952910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==43520.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7962d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=44032.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7962910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==44032.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7972d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=44544.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7972910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==44544.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7982d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=45056.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7982910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==45056.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7992d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=45568.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7992910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==45568.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x79a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=46080.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x79a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==46080.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x79b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=46592.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x79b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==46592.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x79c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=47104.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x79c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==47104.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x79d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=47616.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x79d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==47616.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x79e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=48128.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x79e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==48128.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x79f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=48640.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x79f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==48640.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7a02d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=49152.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7a02910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==49152.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7a12d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=49664.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7a12910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==49664.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7a22d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=50176.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7a22910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==50176.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7a32d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=50688.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7a32910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==50688.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7a42d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=51200.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7a42910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==51200.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7a52d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=51712.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7a52910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==51712.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7a62d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=52224.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7a62910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==52224.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7a72d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=52736.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7a72910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==52736.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7a82d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=53248.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7a82910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==53248.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7a92d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=53760.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7a92910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==53760.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7aa2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=54272.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7aa2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==54272.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7ab2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=54784.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7ab2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==54784.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7ac2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=55296.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7ac2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==55296.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7ad2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=55808.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7ad2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==55808.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7ae2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=56320.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7ae2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==56320.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7af2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=56832.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7af2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==56832.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7b02d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=57344.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7b02910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==57344.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7b12d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=57856.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7b12910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==57856.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7b22d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=58368.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7b22910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==58368.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7b32d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=58880.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7b32910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==58880.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7b42d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=59392.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7b42910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==59392.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7b52d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=59904.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7b52910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==59904.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7b62d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=60416.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7b62910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==60416.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7b72d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=60928.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7b72910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==60928.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7b82d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=61440.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7b82910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==61440.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7b92d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=61952.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7b92910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==61952.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7ba2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=62464.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7ba2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==62464.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7bb2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=62976.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7bb2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==62976.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7bc2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=63488.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7bc2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==63488.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7bd2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=64000.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7bd2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==64000.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7be2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=64512.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7be2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==64512.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7bf2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=65024.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x7bf2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==65024.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8402d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000061035156250);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8402910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000061035156250);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8412d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000061988830566);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8412910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000061988830566);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8422d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000062942504883);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8422910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000062942504883);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8432d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000063896179199);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8432910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000063896179199);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8442d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000064849853516);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8442910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000064849853516);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8452d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000065803527832);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8452910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000065803527832);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8462d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000066757202148);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8462910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000066757202148);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8472d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000067710876465);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8472910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000067710876465);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8482d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000068664550781);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8482910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000068664550781);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8492d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000069618225098);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8492910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000069618225098);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x84a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000070571899414);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x84a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000070571899414);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x84b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000071525573730);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x84b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000071525573730);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x84c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000072479248047);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x84c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000072479248047);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x84d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000073432922363);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x84d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000073432922363);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x84e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000074386596680);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x84e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000074386596680);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x84f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000075340270996);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x84f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000075340270996);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8502d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000076293945312);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8502910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000076293945312);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8512d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000077247619629);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8512910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000077247619629);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8522d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000078201293945);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8522910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000078201293945);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8532d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000079154968262);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8532910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000079154968262);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8542d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000080108642578);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8542910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000080108642578);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8552d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000081062316895);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8552910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000081062316895);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8562d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000082015991211);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8562910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000082015991211);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8572d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000082969665527);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8572910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000082969665527);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8582d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000083923339844);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8582910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000083923339844);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8592d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000084877014160);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8592910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000084877014160);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x85a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000085830688477);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x85a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000085830688477);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x85b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000086784362793);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x85b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000086784362793);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x85c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000087738037109);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x85c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000087738037109);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x85d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000088691711426);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x85d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000088691711426);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x85e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000089645385742);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x85e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000089645385742);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x85f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000090599060059);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x85f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000090599060059);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8602d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000091552734375);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8602910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000091552734375);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8612d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000092506408691);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8612910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000092506408691);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8622d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000093460083008);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8622910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000093460083008);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8632d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000094413757324);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8632910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000094413757324);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8642d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000095367431641);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8642910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000095367431641);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8652d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000096321105957);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8652910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000096321105957);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8662d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000097274780273);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8662910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000097274780273);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8672d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000098228454590);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8672910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000098228454590);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8682d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000099182128906);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8682910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000099182128906);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8692d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000100135803223);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8692910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000100135803223);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x86a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000101089477539);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x86a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000101089477539);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x86b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000102043151855);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x86b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000102043151855);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x86c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000102996826172);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x86c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000102996826172);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x86d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000103950500488);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x86d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000103950500488);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x86e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000104904174805);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x86e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000104904174805);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x86f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000105857849121);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x86f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000105857849121);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8702d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000106811523438);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8702910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000106811523438);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8712d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000107765197754);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8712910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000107765197754);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8722d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000108718872070);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8722910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000108718872070);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8732d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000109672546387);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8732910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000109672546387);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8742d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000110626220703);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8742910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000110626220703);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8752d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000111579895020);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8752910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000111579895020);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8762d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000112533569336);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8762910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000112533569336);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8772d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000113487243652);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8772910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000113487243652);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8782d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000114440917969);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8782910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000114440917969);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8792d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000115394592285);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8792910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000115394592285);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x87a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000116348266602);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x87a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000116348266602);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x87b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000117301940918);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x87b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000117301940918);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x87c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000118255615234);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x87c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000118255615234);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x87d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000119209289551);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x87d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000119209289551);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x87e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000120162963867);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x87e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000120162963867);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x87f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000121116638184);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x87f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000121116638184);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8802d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000122070312500);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8802910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000122070312500);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8812d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000123977661133);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8812910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000123977661133);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8822d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000125885009766);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8822910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000125885009766);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8832d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000127792358398);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8832910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000127792358398);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8842d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000129699707031);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8842910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000129699707031);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8852d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000131607055664);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8852910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000131607055664);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8862d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000133514404297);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8862910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000133514404297);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8872d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000135421752930);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8872910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000135421752930);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8882d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000137329101562);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8882910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000137329101562);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8892d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000139236450195);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8892910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000139236450195);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x88a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000141143798828);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x88a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000141143798828);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x88b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000143051147461);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x88b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000143051147461);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x88c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000144958496094);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x88c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000144958496094);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x88d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000146865844727);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x88d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000146865844727);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x88e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000148773193359);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x88e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000148773193359);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x88f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000150680541992);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x88f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000150680541992);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8902d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000152587890625);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8902910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000152587890625);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8912d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000154495239258);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8912910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000154495239258);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8922d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000156402587891);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8922910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000156402587891);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8932d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000158309936523);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8932910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000158309936523);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8942d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000160217285156);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8942910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000160217285156);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8952d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000162124633789);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8952910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000162124633789);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8962d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000164031982422);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8962910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000164031982422);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8972d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000165939331055);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8972910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000165939331055);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8982d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000167846679688);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8982910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000167846679688);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8992d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000169754028320);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8992910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000169754028320);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x89a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000171661376953);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x89a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000171661376953);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x89b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000173568725586);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x89b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000173568725586);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x89c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000175476074219);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x89c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000175476074219);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x89d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000177383422852);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x89d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000177383422852);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x89e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000179290771484);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x89e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000179290771484);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x89f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000181198120117);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x89f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000181198120117);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8a02d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000183105468750);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8a02910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000183105468750);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8a12d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000185012817383);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8a12910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000185012817383);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8a22d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000186920166016);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8a22910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000186920166016);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8a32d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000188827514648);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8a32910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000188827514648);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8a42d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000190734863281);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8a42910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000190734863281);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8a52d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000192642211914);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8a52910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000192642211914);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8a62d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000194549560547);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8a62910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000194549560547);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8a72d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000196456909180);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8a72910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000196456909180);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8a82d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000198364257812);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8a82910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000198364257812);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8a92d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000200271606445);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8a92910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000200271606445);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8aa2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000202178955078);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8aa2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000202178955078);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8ab2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000204086303711);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8ab2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000204086303711);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8ac2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000205993652344);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8ac2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000205993652344);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8ad2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000207901000977);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8ad2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000207901000977);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8ae2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000209808349609);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8ae2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000209808349609);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8af2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000211715698242);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8af2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000211715698242);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8b02d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000213623046875);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8b02910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000213623046875);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8b12d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000215530395508);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8b12910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000215530395508);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8b22d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000217437744141);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8b22910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000217437744141);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8b32d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000219345092773);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8b32910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000219345092773);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8b42d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000221252441406);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8b42910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000221252441406);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8b52d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000223159790039);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8b52910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000223159790039);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8b62d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000225067138672);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8b62910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000225067138672);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8b72d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000226974487305);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8b72910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000226974487305);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8b82d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000228881835938);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8b82910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000228881835938);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8b92d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000230789184570);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8b92910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000230789184570);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8ba2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000232696533203);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8ba2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000232696533203);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8bb2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000234603881836);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8bb2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000234603881836);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8bc2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000236511230469);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8bc2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000236511230469);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8bd2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000238418579102);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8bd2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000238418579102);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8be2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000240325927734);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8be2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000240325927734);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8bf2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000242233276367);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8bf2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000242233276367);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8c02d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000244140625000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8c02910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000244140625000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8c12d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000247955322266);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8c12910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000247955322266);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8c22d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000251770019531);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8c22910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000251770019531);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8c32d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000255584716797);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8c32910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000255584716797);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8c42d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000259399414062);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8c42910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000259399414062);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8c52d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000263214111328);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8c52910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000263214111328);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8c62d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000267028808594);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8c62910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000267028808594);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8c72d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000270843505859);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8c72910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000270843505859);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8c82d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000274658203125);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8c82910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000274658203125);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8c92d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000278472900391);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8c92910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000278472900391);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8ca2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000282287597656);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8ca2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000282287597656);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8cb2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000286102294922);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8cb2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000286102294922);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8cc2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000289916992188);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8cc2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000289916992188);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8cd2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000293731689453);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8cd2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000293731689453);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8ce2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000297546386719);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8ce2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000297546386719);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8cf2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000301361083984);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8cf2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000301361083984);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8d02d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000305175781250);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8d02910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000305175781250);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8d12d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000308990478516);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8d12910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000308990478516);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8d22d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000312805175781);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8d22910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000312805175781);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8d32d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000316619873047);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8d32910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000316619873047);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8d42d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000320434570312);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8d42910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000320434570312);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8d52d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000324249267578);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8d52910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000324249267578);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8d62d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000328063964844);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8d62910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000328063964844);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8d72d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000331878662109);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8d72910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000331878662109);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8d82d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000335693359375);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8d82910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000335693359375);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8d92d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000339508056641);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8d92910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000339508056641);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8da2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000343322753906);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8da2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000343322753906);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8db2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000347137451172);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8db2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000347137451172);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8dc2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000350952148438);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8dc2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000350952148438);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8dd2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000354766845703);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8dd2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000354766845703);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8de2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000358581542969);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8de2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000358581542969);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8df2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000362396240234);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8df2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000362396240234);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8e02d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000366210937500);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8e02910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000366210937500);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8e12d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000370025634766);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8e12910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000370025634766);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8e22d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000373840332031);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8e22910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000373840332031);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8e32d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000377655029297);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8e32910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000377655029297);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8e42d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000381469726562);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8e42910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000381469726562);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8e52d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000385284423828);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8e52910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000385284423828);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8e62d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000389099121094);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8e62910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000389099121094);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8e72d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000392913818359);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8e72910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000392913818359);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8e82d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000396728515625);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8e82910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000396728515625);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8e92d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000400543212891);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8e92910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000400543212891);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8ea2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000404357910156);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8ea2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000404357910156);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8eb2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000408172607422);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8eb2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000408172607422);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8ec2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000411987304688);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8ec2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000411987304688);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8ed2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000415802001953);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8ed2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000415802001953);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8ee2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000419616699219);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8ee2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000419616699219);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8ef2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000423431396484);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8ef2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000423431396484);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8f02d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000427246093750);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8f02910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000427246093750);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8f12d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000431060791016);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8f12910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000431060791016);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8f22d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000434875488281);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8f22910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000434875488281);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8f32d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000438690185547);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8f32910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000438690185547);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8f42d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000442504882812);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8f42910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000442504882812);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8f52d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000446319580078);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8f52910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000446319580078);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8f62d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000450134277344);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8f62910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000450134277344);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8f72d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000453948974609);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8f72910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000453948974609);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8f82d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000457763671875);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8f82910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000457763671875);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8f92d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000461578369141);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8f92910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000461578369141);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8fa2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000465393066406);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8fa2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000465393066406);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8fb2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000469207763672);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8fb2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000469207763672);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8fc2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000473022460938);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8fc2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000473022460938);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8fd2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000476837158203);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8fd2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000476837158203);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8fe2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000480651855469);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8fe2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000480651855469);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8ff2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000484466552734);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x8ff2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000484466552734);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9002d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000488281250000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9002910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000488281250000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9012d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000495910644531);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9012910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000495910644531);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9022d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000503540039062);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9022910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000503540039062);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9032d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000511169433594);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9032910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000511169433594);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9042d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000518798828125);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9042910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000518798828125);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9052d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000526428222656);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9052910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000526428222656);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9062d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000534057617188);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9062910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000534057617188);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9072d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000541687011719);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9072910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000541687011719);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9082d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000549316406250);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9082910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000549316406250);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9092d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000556945800781);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9092910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000556945800781);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x90a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000564575195312);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x90a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000564575195312);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x90b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000572204589844);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x90b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000572204589844);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x90c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000579833984375);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x90c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000579833984375);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x90d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000587463378906);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x90d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000587463378906);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x90e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000595092773438);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x90e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000595092773438);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x90f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000602722167969);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x90f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000602722167969);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9102d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000610351562500);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9102910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000610351562500);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9112d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000617980957031);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9112910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000617980957031);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9122d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000625610351562);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9122910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000625610351562);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9132d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000633239746094);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9132910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000633239746094);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9142d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000640869140625);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9142910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000640869140625);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9152d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000648498535156);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9152910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000648498535156);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9162d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000656127929688);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9162910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000656127929688);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9172d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000663757324219);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9172910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000663757324219);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9182d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000671386718750);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9182910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000671386718750);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9192d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000679016113281);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9192910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000679016113281);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x91a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000686645507812);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x91a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000686645507812);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x91b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000694274902344);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x91b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000694274902344);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x91c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000701904296875);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x91c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000701904296875);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x91d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000709533691406);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x91d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000709533691406);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x91e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000717163085938);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x91e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000717163085938);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x91f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000724792480469);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x91f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000724792480469);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9202d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000732421875000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9202910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000732421875000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9212d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000740051269531);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9212910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000740051269531);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9222d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000747680664062);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9222910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000747680664062);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9232d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000755310058594);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9232910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000755310058594);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9242d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000762939453125);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9242910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000762939453125);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9252d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000770568847656);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9252910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000770568847656);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9262d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000778198242188);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9262910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000778198242188);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9272d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000785827636719);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9272910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000785827636719);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9282d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000793457031250);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9282910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000793457031250);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9292d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000801086425781);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9292910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000801086425781);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x92a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000808715820312);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x92a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000808715820312);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x92b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000816345214844);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x92b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000816345214844);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x92c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000823974609375);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x92c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000823974609375);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x92d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000831604003906);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x92d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000831604003906);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x92e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000839233398438);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x92e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000839233398438);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x92f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000846862792969);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x92f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000846862792969);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9302d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000854492187500);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9302910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000854492187500);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9312d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000862121582031);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9312910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000862121582031);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9322d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000869750976562);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9322910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000869750976562);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9332d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000877380371094);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9332910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000877380371094);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9342d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000885009765625);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9342910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000885009765625);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9352d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000892639160156);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9352910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000892639160156);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9362d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000900268554688);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9362910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000900268554688);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9372d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000907897949219);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9372910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000907897949219);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9382d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000915527343750);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9382910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000915527343750);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9392d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000923156738281);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9392910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000923156738281);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x93a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000930786132812);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x93a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000930786132812);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x93b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000938415527344);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x93b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000938415527344);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x93c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000946044921875);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x93c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000946044921875);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x93d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000953674316406);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x93d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000953674316406);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x93e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000961303710938);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x93e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000961303710938);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x93f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000968933105469);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x93f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000968933105469);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9402d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000976562500000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9402910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000976562500000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9412d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.000991821289062);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9412910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.000991821289062);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9422d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.001007080078125);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9422910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.001007080078125);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9432d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.001022338867188);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9432910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.001022338867188);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9442d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.001037597656250);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9442910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.001037597656250);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9452d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.001052856445312);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9452910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.001052856445312);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9462d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.001068115234375);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9462910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.001068115234375);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9472d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.001083374023438);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9472910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.001083374023438);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9482d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.001098632812500);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9482910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.001098632812500);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9492d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.001113891601562);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9492910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.001113891601562);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x94a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.001129150390625);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x94a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.001129150390625);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x94b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.001144409179688);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x94b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.001144409179688);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x94c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.001159667968750);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x94c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.001159667968750);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x94d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.001174926757812);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x94d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.001174926757812);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x94e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.001190185546875);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x94e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.001190185546875);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x94f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.001205444335938);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x94f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.001205444335938);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9502d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.001220703125000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9502910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.001220703125000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9512d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.001235961914062);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9512910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.001235961914062);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9522d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.001251220703125);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9522910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.001251220703125);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9532d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.001266479492188);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9532910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.001266479492188);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9542d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.001281738281250);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9542910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.001281738281250);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9552d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.001296997070312);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9552910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.001296997070312);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9562d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.001312255859375);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9562910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.001312255859375);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9572d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.001327514648438);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9572910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.001327514648438);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9582d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.001342773437500);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9582910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.001342773437500);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9592d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.001358032226562);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9592910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.001358032226562);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x95a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.001373291015625);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x95a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.001373291015625);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x95b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.001388549804688);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x95b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.001388549804688);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x95c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.001403808593750);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x95c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.001403808593750);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x95d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.001419067382812);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x95d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.001419067382812);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x95e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.001434326171875);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x95e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.001434326171875);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x95f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.001449584960938);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x95f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.001449584960938);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9602d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.001464843750000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9602910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.001464843750000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9612d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.001480102539062);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9612910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.001480102539062);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9622d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.001495361328125);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9622910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.001495361328125);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9632d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.001510620117188);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9632910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.001510620117188);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9642d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.001525878906250);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9642910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.001525878906250);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9652d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.001541137695312);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9652910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.001541137695312);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9662d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.001556396484375);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9662910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.001556396484375);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9672d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.001571655273438);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9672910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.001571655273438);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9682d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.001586914062500);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9682910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.001586914062500);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9692d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.001602172851562);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9692910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.001602172851562);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x96a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.001617431640625);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x96a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.001617431640625);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x96b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.001632690429688);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x96b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.001632690429688);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x96c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.001647949218750);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x96c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.001647949218750);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x96d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.001663208007812);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x96d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.001663208007812);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x96e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.001678466796875);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x96e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.001678466796875);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x96f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.001693725585938);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x96f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.001693725585938);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9702d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.001708984375000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9702910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.001708984375000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9712d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.001724243164062);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9712910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.001724243164062);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9722d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.001739501953125);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9722910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.001739501953125);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9732d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.001754760742188);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9732910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.001754760742188);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9742d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.001770019531250);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9742910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.001770019531250);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9752d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.001785278320312);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9752910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.001785278320312);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9762d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.001800537109375);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9762910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.001800537109375);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9772d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.001815795898438);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9772910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.001815795898438);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9782d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.001831054687500);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9782910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.001831054687500);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9792d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.001846313476562);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9792910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.001846313476562);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x97a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.001861572265625);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x97a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.001861572265625);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x97b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.001876831054688);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x97b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.001876831054688);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x97c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.001892089843750);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x97c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.001892089843750);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x97d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.001907348632812);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x97d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.001907348632812);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x97e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.001922607421875);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x97e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.001922607421875);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x97f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.001937866210938);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x97f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.001937866210938);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9802d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.001953125000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9802910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.001953125000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9812d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.001983642578125);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9812910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.001983642578125);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9822d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.002014160156250);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9822910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.002014160156250);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9832d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.002044677734375);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9832910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.002044677734375);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9842d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.002075195312500);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9842910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.002075195312500);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9852d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.002105712890625);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9852910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.002105712890625);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9862d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.002136230468750);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9862910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.002136230468750);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9872d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.002166748046875);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9872910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.002166748046875);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9882d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.002197265625000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9882910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.002197265625000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9892d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.002227783203125);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9892910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.002227783203125);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x98a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.002258300781250);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x98a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.002258300781250);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x98b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.002288818359375);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x98b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.002288818359375);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x98c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.002319335937500);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x98c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.002319335937500);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x98d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.002349853515625);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x98d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.002349853515625);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x98e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.002380371093750);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x98e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.002380371093750);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x98f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.002410888671875);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x98f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.002410888671875);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9902d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.002441406250000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9902910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.002441406250000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9912d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.002471923828125);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9912910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.002471923828125);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9922d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.002502441406250);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9922910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.002502441406250);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9932d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.002532958984375);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9932910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.002532958984375);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9942d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.002563476562500);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9942910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.002563476562500);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9952d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.002593994140625);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9952910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.002593994140625);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9962d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.002624511718750);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9962910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.002624511718750);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9972d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.002655029296875);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9972910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.002655029296875);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9982d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.002685546875000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9982910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.002685546875000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9992d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.002716064453125);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9992910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.002716064453125);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x99a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.002746582031250);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x99a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.002746582031250);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x99b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.002777099609375);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x99b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.002777099609375);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x99c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.002807617187500);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x99c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.002807617187500);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x99d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.002838134765625);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x99d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.002838134765625);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x99e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.002868652343750);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x99e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.002868652343750);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x99f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.002899169921875);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x99f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.002899169921875);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9a02d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.002929687500000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9a02910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.002929687500000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9a12d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.002960205078125);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9a12910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.002960205078125);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9a22d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.002990722656250);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9a22910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.002990722656250);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9a32d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.003021240234375);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9a32910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.003021240234375);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9a42d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.003051757812500);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9a42910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.003051757812500);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9a52d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.003082275390625);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9a52910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.003082275390625);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9a62d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.003112792968750);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9a62910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.003112792968750);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9a72d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.003143310546875);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9a72910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.003143310546875);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9a82d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.003173828125000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9a82910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.003173828125000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9a92d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.003204345703125);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9a92910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.003204345703125);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9aa2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.003234863281250);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9aa2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.003234863281250);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9ab2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.003265380859375);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9ab2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.003265380859375);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9ac2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.003295898437500);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9ac2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.003295898437500);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9ad2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.003326416015625);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9ad2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.003326416015625);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9ae2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.003356933593750);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9ae2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.003356933593750);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9af2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.003387451171875);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9af2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.003387451171875);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9b02d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.003417968750000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9b02910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.003417968750000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9b12d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.003448486328125);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9b12910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.003448486328125);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9b22d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.003479003906250);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9b22910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.003479003906250);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9b32d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.003509521484375);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9b32910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.003509521484375);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9b42d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.003540039062500);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9b42910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.003540039062500);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9b52d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.003570556640625);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9b52910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.003570556640625);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9b62d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.003601074218750);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9b62910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.003601074218750);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9b72d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.003631591796875);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9b72910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.003631591796875);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9b82d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.003662109375000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9b82910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.003662109375000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9b92d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.003692626953125);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9b92910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.003692626953125);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9ba2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.003723144531250);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9ba2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.003723144531250);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9bb2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.003753662109375);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9bb2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.003753662109375);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9bc2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.003784179687500);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9bc2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.003784179687500);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9bd2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.003814697265625);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9bd2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.003814697265625);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9be2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.003845214843750);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9be2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.003845214843750);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9bf2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.003875732421875);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9bf2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.003875732421875);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9c02d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.003906250000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9c02910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.003906250000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9c12d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.003967285156250);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9c12910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.003967285156250);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9c22d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.004028320312500);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9c22910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.004028320312500);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9c32d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.004089355468750);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9c32910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.004089355468750);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9c42d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.004150390625000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9c42910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.004150390625000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9c52d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.004211425781250);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9c52910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.004211425781250);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9c62d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.004272460937500);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9c62910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.004272460937500);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9c72d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.004333496093750);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9c72910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.004333496093750);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9c82d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.004394531250000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9c82910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.004394531250000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9c92d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.004455566406250);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9c92910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.004455566406250);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9ca2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.004516601562500);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9ca2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.004516601562500);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9cb2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.004577636718750);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9cb2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.004577636718750);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9cc2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.004638671875000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9cc2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.004638671875000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9cd2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.004699707031250);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9cd2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.004699707031250);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9ce2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.004760742187500);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9ce2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.004760742187500);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9cf2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.004821777343750);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9cf2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.004821777343750);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9d02d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.004882812500000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9d02910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.004882812500000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9d12d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.004943847656250);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9d12910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.004943847656250);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9d22d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.005004882812500);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9d22910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.005004882812500);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9d32d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.005065917968750);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9d32910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.005065917968750);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9d42d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.005126953125000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9d42910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.005126953125000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9d52d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.005187988281250);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9d52910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.005187988281250);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9d62d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.005249023437500);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9d62910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.005249023437500);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9d72d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.005310058593750);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9d72910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.005310058593750);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9d82d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.005371093750000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9d82910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.005371093750000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9d92d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.005432128906250);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9d92910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.005432128906250);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9da2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.005493164062500);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9da2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.005493164062500);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9db2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.005554199218750);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9db2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.005554199218750);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9dc2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.005615234375000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9dc2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.005615234375000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9dd2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.005676269531250);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9dd2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.005676269531250);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9de2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.005737304687500);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9de2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.005737304687500);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9df2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.005798339843750);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9df2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.005798339843750);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9e02d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.005859375000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9e02910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.005859375000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9e12d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.005920410156250);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9e12910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.005920410156250);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9e22d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.005981445312500);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9e22910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.005981445312500);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9e32d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.006042480468750);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9e32910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.006042480468750);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9e42d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.006103515625000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9e42910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.006103515625000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9e52d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.006164550781250);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9e52910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.006164550781250);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9e62d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.006225585937500);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9e62910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.006225585937500);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9e72d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.006286621093750);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9e72910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.006286621093750);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9e82d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.006347656250000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9e82910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.006347656250000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9e92d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.006408691406250);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9e92910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.006408691406250);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9ea2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.006469726562500);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9ea2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.006469726562500);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9eb2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.006530761718750);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9eb2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.006530761718750);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9ec2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.006591796875000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9ec2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.006591796875000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9ed2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.006652832031250);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9ed2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.006652832031250);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9ee2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.006713867187500);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9ee2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.006713867187500);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9ef2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.006774902343750);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9ef2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.006774902343750);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9f02d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.006835937500000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9f02910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.006835937500000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9f12d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.006896972656250);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9f12910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.006896972656250);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9f22d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.006958007812500);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9f22910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.006958007812500);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9f32d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.007019042968750);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9f32910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.007019042968750);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9f42d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.007080078125000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9f42910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.007080078125000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9f52d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.007141113281250);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9f52910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.007141113281250);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9f62d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.007202148437500);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9f62910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.007202148437500);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9f72d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.007263183593750);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9f72910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.007263183593750);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9f82d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.007324218750000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9f82910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.007324218750000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9f92d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.007385253906250);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9f92910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.007385253906250);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9fa2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.007446289062500);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9fa2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.007446289062500);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9fb2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.007507324218750);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9fb2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.007507324218750);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9fc2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.007568359375000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9fc2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.007568359375000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9fd2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.007629394531250);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9fd2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.007629394531250);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9fe2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.007690429687500);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9fe2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.007690429687500);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9ff2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.007751464843750);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0x9ff2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.007751464843750);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa002d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.007812500000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa002910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.007812500000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa012d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.007934570312500);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa012910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.007934570312500);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa022d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.008056640625000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa022910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.008056640625000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa032d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.008178710937500);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa032910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.008178710937500);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa042d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.008300781250000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa042910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.008300781250000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa052d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.008422851562500);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa052910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.008422851562500);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa062d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.008544921875000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa062910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.008544921875000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa072d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.008666992187500);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa072910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.008666992187500);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa082d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.008789062500000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa082910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.008789062500000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa092d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.008911132812500);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa092910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.008911132812500);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa0a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.009033203125000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa0a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.009033203125000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa0b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.009155273437500);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa0b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.009155273437500);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa0c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.009277343750000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa0c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.009277343750000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa0d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.009399414062500);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa0d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.009399414062500);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa0e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.009521484375000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa0e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.009521484375000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa0f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.009643554687500);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa0f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.009643554687500);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa102d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.009765625000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa102910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.009765625000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa112d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.009887695312500);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa112910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.009887695312500);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa122d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.010009765625000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa122910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.010009765625000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa132d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.010131835937500);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa132910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.010131835937500);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa142d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.010253906250000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa142910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.010253906250000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa152d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.010375976562500);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa152910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.010375976562500);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa162d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.010498046875000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa162910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.010498046875000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa172d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.010620117187500);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa172910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.010620117187500);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa182d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.010742187500000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa182910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.010742187500000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa192d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.010864257812500);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa192910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.010864257812500);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa1a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.010986328125000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa1a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.010986328125000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa1b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.011108398437500);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa1b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.011108398437500);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa1c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.011230468750000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa1c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.011230468750000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa1d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.011352539062500);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa1d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.011352539062500);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa1e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.011474609375000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa1e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.011474609375000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa1f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.011596679687500);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa1f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.011596679687500);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa202d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.011718750000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa202910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.011718750000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa212d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.011840820312500);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa212910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.011840820312500);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa222d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.011962890625000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa222910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.011962890625000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa232d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.012084960937500);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa232910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.012084960937500);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa242d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.012207031250000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa242910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.012207031250000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa252d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.012329101562500);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa252910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.012329101562500);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa262d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.012451171875000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa262910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.012451171875000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa272d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.012573242187500);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa272910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.012573242187500);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa282d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.012695312500000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa282910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.012695312500000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa292d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.012817382812500);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa292910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.012817382812500);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa2a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.012939453125000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa2a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.012939453125000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa2b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.013061523437500);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa2b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.013061523437500);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa2c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.013183593750000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa2c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.013183593750000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa2d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.013305664062500);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa2d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.013305664062500);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa2e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.013427734375000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa2e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.013427734375000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa2f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.013549804687500);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa2f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.013549804687500);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa302d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.013671875000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa302910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.013671875000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa312d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.013793945312500);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa312910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.013793945312500);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa322d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.013916015625000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa322910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.013916015625000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa332d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.014038085937500);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa332910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.014038085937500);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa342d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.014160156250000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa342910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.014160156250000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa352d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.014282226562500);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa352910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.014282226562500);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa362d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.014404296875000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa362910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.014404296875000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa372d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.014526367187500);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa372910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.014526367187500);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa382d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.014648437500000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa382910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.014648437500000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa392d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.014770507812500);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa392910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.014770507812500);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa3a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.014892578125000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa3a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.014892578125000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa3b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.015014648437500);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa3b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.015014648437500);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa3c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.015136718750000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa3c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.015136718750000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa3d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.015258789062500);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa3d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.015258789062500);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa3e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.015380859375000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa3e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.015380859375000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa3f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.015502929687500);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa3f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.015502929687500);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa402d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.015625000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa402910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.015625000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa412d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.015869140625000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa412910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.015869140625000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa422d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.016113281250000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa422910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.016113281250000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa432d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.016357421875000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa432910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.016357421875000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa442d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.016601562500000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa442910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.016601562500000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa452d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.016845703125000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa452910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.016845703125000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa462d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.017089843750000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa462910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.017089843750000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa472d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.017333984375000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa472910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.017333984375000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa482d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.017578125000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa482910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.017578125000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa492d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.017822265625000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa492910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.017822265625000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa4a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.018066406250000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa4a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.018066406250000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa4b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.018310546875000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa4b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.018310546875000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa4c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.018554687500000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa4c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.018554687500000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa4d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.018798828125000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa4d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.018798828125000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa4e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.019042968750000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa4e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.019042968750000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa4f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.019287109375000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa4f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.019287109375000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa502d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.019531250000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa502910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.019531250000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa512d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.019775390625000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa512910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.019775390625000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa522d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.020019531250000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa522910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.020019531250000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa532d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.020263671875000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa532910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.020263671875000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa542d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.020507812500000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa542910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.020507812500000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa552d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.020751953125000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa552910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.020751953125000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa562d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.020996093750000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa562910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.020996093750000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa572d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.021240234375000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa572910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.021240234375000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa582d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.021484375000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa582910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.021484375000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa592d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.021728515625000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa592910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.021728515625000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa5a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.021972656250000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa5a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.021972656250000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa5b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.022216796875000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa5b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.022216796875000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa5c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.022460937500000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa5c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.022460937500000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa5d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.022705078125000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa5d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.022705078125000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa5e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.022949218750000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa5e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.022949218750000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa5f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.023193359375000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa5f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.023193359375000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa602d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.023437500000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa602910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.023437500000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa612d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.023681640625000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa612910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.023681640625000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa622d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.023925781250000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa622910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.023925781250000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa632d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.024169921875000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa632910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.024169921875000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa642d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.024414062500000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa642910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.024414062500000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa652d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.024658203125000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa652910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.024658203125000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa662d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.024902343750000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa662910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.024902343750000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa672d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.025146484375000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa672910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.025146484375000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa682d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.025390625000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa682910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.025390625000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa692d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.025634765625000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa692910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.025634765625000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa6a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.025878906250000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa6a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.025878906250000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa6b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.026123046875000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa6b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.026123046875000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa6c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.026367187500000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa6c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.026367187500000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa6d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.026611328125000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa6d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.026611328125000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa6e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.026855468750000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa6e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.026855468750000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa6f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.027099609375000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa6f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.027099609375000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa702d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.027343750000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa702910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.027343750000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa712d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.027587890625000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa712910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.027587890625000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa722d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.027832031250000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa722910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.027832031250000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa732d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.028076171875000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa732910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.028076171875000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa742d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.028320312500000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa742910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.028320312500000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa752d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.028564453125000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa752910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.028564453125000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa762d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.028808593750000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa762910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.028808593750000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa772d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.029052734375000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa772910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.029052734375000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa782d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.029296875000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa782910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.029296875000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa792d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.029541015625000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa792910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.029541015625000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa7a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.029785156250000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa7a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.029785156250000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa7b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.030029296875000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa7b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.030029296875000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa7c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.030273437500000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa7c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.030273437500000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa7d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.030517578125000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa7d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.030517578125000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa7e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.030761718750000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa7e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.030761718750000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa7f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.031005859375000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa7f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.031005859375000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa802d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.031250000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa802910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.031250000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa812d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.031738281250000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa812910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.031738281250000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa822d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.032226562500000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa822910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.032226562500000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa832d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.032714843750000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa832910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.032714843750000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa842d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.033203125000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa842910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.033203125000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa852d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.033691406250000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa852910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.033691406250000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa862d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.034179687500000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa862910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.034179687500000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa872d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.034667968750000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa872910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.034667968750000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa882d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.035156250000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa882910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.035156250000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa892d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.035644531250000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa892910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.035644531250000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa8a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.036132812500000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa8a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.036132812500000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa8b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.036621093750000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa8b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.036621093750000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa8c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.037109375000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa8c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.037109375000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa8d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.037597656250000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa8d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.037597656250000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa8e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.038085937500000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa8e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.038085937500000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa8f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.038574218750000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa8f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.038574218750000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa902d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.039062500000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa902910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.039062500000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa912d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.039550781250000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa912910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.039550781250000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa922d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.040039062500000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa922910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.040039062500000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa932d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.040527343750000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa932910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.040527343750000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa942d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.041015625000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa942910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.041015625000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa952d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.041503906250000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa952910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.041503906250000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa962d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.041992187500000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa962910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.041992187500000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa972d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.042480468750000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa972910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.042480468750000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa982d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.042968750000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa982910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.042968750000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa992d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.043457031250000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa992910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.043457031250000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa9a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.043945312500000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa9a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.043945312500000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa9b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.044433593750000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa9b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.044433593750000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa9c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.044921875000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa9c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.044921875000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa9d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.045410156250000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa9d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.045410156250000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa9e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.045898437500000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa9e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.045898437500000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa9f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.046386718750000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xa9f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.046386718750000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xaa02d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.046875000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xaa02910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.046875000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xaa12d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.047363281250000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xaa12910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.047363281250000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xaa22d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.047851562500000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xaa22910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.047851562500000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xaa32d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.048339843750000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xaa32910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.048339843750000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xaa42d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.048828125000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xaa42910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.048828125000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xaa52d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.049316406250000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xaa52910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.049316406250000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xaa62d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.049804687500000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xaa62910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.049804687500000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xaa72d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.050292968750000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xaa72910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.050292968750000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xaa82d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.050781250000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xaa82910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.050781250000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xaa92d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.051269531250000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xaa92910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.051269531250000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xaaa2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.051757812500000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xaaa2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.051757812500000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xaab2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.052246093750000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xaab2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.052246093750000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xaac2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.052734375000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xaac2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.052734375000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xaad2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.053222656250000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xaad2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.053222656250000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xaae2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.053710937500000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xaae2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.053710937500000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xaaf2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.054199218750000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xaaf2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.054199218750000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xab02d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.054687500000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xab02910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.054687500000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xab12d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.055175781250000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xab12910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.055175781250000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xab22d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.055664062500000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xab22910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.055664062500000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xab32d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.056152343750000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xab32910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.056152343750000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xab42d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.056640625000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xab42910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.056640625000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xab52d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.057128906250000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xab52910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.057128906250000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xab62d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.057617187500000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xab62910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.057617187500000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xab72d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.058105468750000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xab72910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.058105468750000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xab82d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.058593750000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xab82910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.058593750000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xab92d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.059082031250000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xab92910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.059082031250000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xaba2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.059570312500000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xaba2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.059570312500000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xabb2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.060058593750000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xabb2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.060058593750000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xabc2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.060546875000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xabc2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.060546875000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xabd2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.061035156250000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xabd2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.061035156250000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xabe2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.061523437500000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xabe2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.061523437500000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xabf2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.062011718750000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xabf2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.062011718750000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xac02d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.062500000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xac02910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.062500000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xac12d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.063476562500000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xac12910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.063476562500000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xac22d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.064453125000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xac22910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.064453125000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xac32d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.065429687500000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xac32910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.065429687500000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xac42d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.066406250000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xac42910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.066406250000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xac52d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.067382812500000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xac52910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.067382812500000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xac62d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.068359375000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xac62910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.068359375000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xac72d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.069335937500000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xac72910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.069335937500000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xac82d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.070312500000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xac82910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.070312500000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xac92d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.071289062500000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xac92910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.071289062500000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xaca2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.072265625000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xaca2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.072265625000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xacb2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.073242187500000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xacb2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.073242187500000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xacc2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.074218750000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xacc2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.074218750000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xacd2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.075195312500000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xacd2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.075195312500000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xace2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.076171875000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xace2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.076171875000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xacf2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.077148437500000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xacf2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.077148437500000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xad02d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.078125000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xad02910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.078125000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xad12d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.079101562500000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xad12910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.079101562500000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xad22d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.080078125000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xad22910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.080078125000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xad32d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.081054687500000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xad32910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.081054687500000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xad42d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.082031250000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xad42910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.082031250000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xad52d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.083007812500000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xad52910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.083007812500000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xad62d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.083984375000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xad62910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.083984375000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xad72d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.084960937500000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xad72910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.084960937500000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xad82d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.085937500000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xad82910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.085937500000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xad92d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.086914062500000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xad92910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.086914062500000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xada2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.087890625000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xada2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.087890625000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xadb2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.088867187500000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xadb2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.088867187500000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xadc2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.089843750000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xadc2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.089843750000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xadd2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.090820312500000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xadd2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.090820312500000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xade2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.091796875000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xade2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.091796875000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xadf2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.092773437500000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xadf2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.092773437500000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xae02d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.093750000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xae02910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.093750000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xae12d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.094726562500000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xae12910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.094726562500000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xae22d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.095703125000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xae22910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.095703125000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xae32d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.096679687500000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xae32910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.096679687500000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xae42d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.097656250000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xae42910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.097656250000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xae52d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.098632812500000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xae52910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.098632812500000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xae62d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.099609375000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xae62910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.099609375000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xae72d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.100585937500000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xae72910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.100585937500000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xae82d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.101562500000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xae82910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.101562500000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xae92d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.102539062500000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xae92910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.102539062500000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xaea2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.103515625000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xaea2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.103515625000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xaeb2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.104492187500000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xaeb2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.104492187500000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xaec2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.105468750000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xaec2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.105468750000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xaed2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.106445312500000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xaed2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.106445312500000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xaee2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.107421875000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xaee2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.107421875000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xaef2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.108398437500000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xaef2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.108398437500000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xaf02d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.109375000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xaf02910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.109375000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xaf12d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.110351562500000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xaf12910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.110351562500000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xaf22d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.111328125000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xaf22910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.111328125000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xaf32d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.112304687500000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xaf32910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.112304687500000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xaf42d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.113281250000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xaf42910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.113281250000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xaf52d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.114257812500000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xaf52910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.114257812500000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xaf62d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.115234375000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xaf62910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.115234375000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xaf72d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.116210937500000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xaf72910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.116210937500000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xaf82d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.117187500000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xaf82910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.117187500000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xaf92d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.118164062500000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xaf92910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.118164062500000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xafa2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.119140625000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xafa2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.119140625000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xafb2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.120117187500000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xafb2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.120117187500000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xafc2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.121093750000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xafc2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.121093750000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xafd2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.122070312500000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xafd2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.122070312500000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xafe2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.123046875000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xafe2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.123046875000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xaff2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.124023437500000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xaff2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.124023437500000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb002d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.125000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb002910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.125000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb012d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.126953125000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb012910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.126953125000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb022d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.128906250000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb022910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.128906250000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb032d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.130859375000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb032910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.130859375000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb042d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.132812500000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb042910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.132812500000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb052d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.134765625000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb052910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.134765625000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb062d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.136718750000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb062910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.136718750000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb072d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.138671875000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb072910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.138671875000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb082d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.140625000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb082910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.140625000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb092d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.142578125000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb092910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.142578125000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb0a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.144531250000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb0a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.144531250000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb0b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.146484375000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb0b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.146484375000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb0c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.148437500000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb0c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.148437500000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb0d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.150390625000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb0d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.150390625000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb0e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.152343750000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb0e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.152343750000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb0f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.154296875000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb0f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.154296875000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb102d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.156250000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb102910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.156250000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb112d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.158203125000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb112910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.158203125000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb122d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.160156250000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb122910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.160156250000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb132d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.162109375000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb132910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.162109375000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb142d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.164062500000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb142910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.164062500000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb152d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.166015625000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb152910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.166015625000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb162d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.167968750000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb162910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.167968750000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb172d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.169921875000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb172910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.169921875000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb182d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.171875000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb182910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.171875000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb192d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.173828125000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb192910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.173828125000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb1a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.175781250000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb1a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.175781250000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb1b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.177734375000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb1b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.177734375000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb1c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.179687500000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb1c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.179687500000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb1d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.181640625000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb1d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.181640625000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb1e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.183593750000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb1e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.183593750000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb1f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.185546875000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb1f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.185546875000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb202d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.187500000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb202910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.187500000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb212d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.189453125000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb212910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.189453125000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb222d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.191406250000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb222910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.191406250000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb232d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.193359375000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb232910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.193359375000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb242d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.195312500000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb242910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.195312500000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb252d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.197265625000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb252910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.197265625000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb262d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.199218750000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb262910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.199218750000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb272d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.201171875000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb272910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.201171875000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb282d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.203125000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb282910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.203125000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb292d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.205078125000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb292910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.205078125000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb2a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.207031250000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb2a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.207031250000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb2b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.208984375000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb2b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.208984375000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb2c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.210937500000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb2c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.210937500000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb2d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.212890625000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb2d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.212890625000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb2e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.214843750000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb2e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.214843750000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb2f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.216796875000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb2f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.216796875000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb302d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.218750000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb302910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.218750000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb312d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.220703125000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb312910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.220703125000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb322d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.222656250000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb322910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.222656250000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb332d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.224609375000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb332910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.224609375000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb342d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.226562500000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb342910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.226562500000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb352d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.228515625000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb352910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.228515625000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb362d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.230468750000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb362910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.230468750000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb372d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.232421875000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb372910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.232421875000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb382d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.234375000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb382910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.234375000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb392d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.236328125000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb392910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.236328125000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb3a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.238281250000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb3a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.238281250000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb3b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.240234375000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb3b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.240234375000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb3c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.242187500000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb3c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.242187500000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb3d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.244140625000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb3d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.244140625000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb3e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.246093750000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb3e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.246093750000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb3f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.248046875000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb3f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.248046875000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb402d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.250000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb402910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.250000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb412d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.253906250000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb412910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.253906250000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb422d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.257812500000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb422910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.257812500000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb432d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.261718750000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb432910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.261718750000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb442d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.265625000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb442910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.265625000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb452d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.269531250000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb452910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.269531250000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb462d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.273437500000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb462910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.273437500000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb472d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.277343750000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb472910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.277343750000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb482d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.281250000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb482910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.281250000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb492d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.285156250000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb492910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.285156250000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb4a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.289062500000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb4a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.289062500000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb4b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.292968750000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb4b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.292968750000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb4c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.296875000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb4c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.296875000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb4d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.300781250000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb4d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.300781250000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb4e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.304687500000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb4e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.304687500000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb4f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.308593750000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb4f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.308593750000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb502d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.312500000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb502910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.312500000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb512d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.316406250000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb512910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.316406250000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb522d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.320312500000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb522910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.320312500000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb532d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.324218750000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb532910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.324218750000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb542d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.328125000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb542910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.328125000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb552d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.332031250000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb552910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.332031250000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb562d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.335937500000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb562910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.335937500000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb572d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.339843750000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb572910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.339843750000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb582d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.343750000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb582910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.343750000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb592d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.347656250000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb592910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.347656250000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb5a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.351562500000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb5a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.351562500000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb5b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.355468750000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb5b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.355468750000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb5c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.359375000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb5c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.359375000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb5d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.363281250000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb5d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.363281250000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb5e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.367187500000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb5e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.367187500000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb5f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.371093750000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb5f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.371093750000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb602d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.375000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb602910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.375000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb612d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.378906250000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb612910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.378906250000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb622d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.382812500000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb622910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.382812500000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb632d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.386718750000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb632910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.386718750000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb642d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.390625000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb642910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.390625000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb652d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.394531250000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb652910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.394531250000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb662d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.398437500000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb662910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.398437500000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb672d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.402343750000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb672910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.402343750000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb682d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.406250000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb682910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.406250000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb692d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.410156250000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb692910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.410156250000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb6a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.414062500000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb6a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.414062500000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb6b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.417968750000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb6b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.417968750000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb6c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.421875000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb6c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.421875000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb6d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.425781250000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb6d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.425781250000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb6e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.429687500000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb6e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.429687500000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb6f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.433593750000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb6f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.433593750000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb702d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.437500000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb702910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.437500000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb712d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.441406250000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb712910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.441406250000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb722d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.445312500000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb722910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.445312500000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb732d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.449218750000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb732910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.449218750000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb742d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.453125000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb742910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.453125000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb752d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.457031250000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb752910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.457031250000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb762d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.460937500000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb762910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.460937500000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb772d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.464843750000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb772910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.464843750000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb782d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.468750000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb782910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.468750000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb792d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.472656250000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb792910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.472656250000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb7a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.476562500000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb7a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.476562500000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb7b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.480468750000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb7b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.480468750000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb7c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.484375000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb7c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.484375000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb7d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.488281250000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb7d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.488281250000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb7e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.492187500000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb7e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.492187500000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb7f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.496093750000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb7f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.496093750000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb802d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.500000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb802910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.500000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb812d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.507812500000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb812910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.507812500000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb822d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.515625000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb822910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.515625000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb832d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.523437500000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb832910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.523437500000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb842d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.531250000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb842910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.531250000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb852d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.539062500000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb852910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.539062500000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb862d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.546875000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb862910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.546875000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb872d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.554687500000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb872910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.554687500000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb882d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.562500000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb882910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.562500000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb892d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.570312500000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb892910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.570312500000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb8a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.578125000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb8a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.578125000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb8b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.585937500000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb8b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.585937500000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb8c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.593750000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb8c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.593750000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb8d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.601562500000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb8d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.601562500000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb8e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.609375000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb8e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.609375000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb8f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.617187500000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb8f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.617187500000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb902d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.625000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb902910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.625000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb912d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.632812500000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb912910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.632812500000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb922d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.640625000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb922910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.640625000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb932d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.648437500000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb932910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.648437500000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb942d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.656250000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb942910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.656250000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb952d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.664062500000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb952910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.664062500000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb962d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.671875000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb962910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.671875000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb972d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.679687500000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb972910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.679687500000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb982d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.687500000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb982910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.687500000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb992d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.695312500000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb992910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.695312500000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb9a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.703125000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb9a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.703125000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb9b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.710937500000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb9b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.710937500000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb9c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.718750000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb9c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.718750000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb9d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.726562500000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb9d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.726562500000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb9e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.734375000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb9e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.734375000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb9f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.742187500000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xb9f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.742187500000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xba02d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.750000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xba02910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.750000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xba12d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.757812500000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xba12910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.757812500000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xba22d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.765625000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xba22910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.765625000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xba32d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.773437500000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xba32910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.773437500000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xba42d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.781250000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xba42910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.781250000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xba52d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.789062500000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xba52910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.789062500000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xba62d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.796875000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xba62910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.796875000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xba72d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.804687500000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xba72910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.804687500000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xba82d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.812500000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xba82910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.812500000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xba92d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.820312500000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xba92910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.820312500000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbaa2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.828125000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbaa2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.828125000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbab2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.835937500000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbab2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.835937500000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbac2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.843750000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbac2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.843750000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbad2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.851562500000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbad2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.851562500000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbae2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.859375000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbae2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.859375000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbaf2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.867187500000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbaf2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.867187500000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbb02d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.875000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbb02910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.875000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbb12d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.882812500000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbb12910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.882812500000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbb22d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.890625000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbb22910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.890625000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbb32d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.898437500000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbb32910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.898437500000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbb42d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.906250000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbb42910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.906250000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbb52d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.914062500000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbb52910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.914062500000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbb62d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.921875000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbb62910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.921875000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbb72d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.929687500000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbb72910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.929687500000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbb82d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.937500000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbb82910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.937500000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbb92d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.945312500000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbb92910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.945312500000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbba2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.953125000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbba2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.953125000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbbb2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.960937500000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbbb2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.960937500000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbbc2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.968750000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbbc2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.968750000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbbd2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.976562500000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbbd2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.976562500000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbbe2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.984375000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbbe2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.984375000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbbf2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-0.992187500000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbbf2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-0.992187500000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbc02d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-1.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbc02910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-1.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbc12d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-1.015625000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbc12910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-1.015625000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbc22d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-1.031250000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbc22910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-1.031250000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbc32d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-1.046875000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbc32910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-1.046875000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbc42d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-1.062500000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbc42910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-1.062500000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbc52d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-1.078125000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbc52910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-1.078125000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbc62d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-1.093750000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbc62910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-1.093750000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbc72d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-1.109375000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbc72910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-1.109375000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbc82d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-1.125000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbc82910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-1.125000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbc92d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-1.140625000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbc92910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-1.140625000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbca2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-1.156250000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbca2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-1.156250000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbcb2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-1.171875000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbcb2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-1.171875000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbcc2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-1.187500000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbcc2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-1.187500000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbcd2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-1.203125000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbcd2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-1.203125000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbce2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-1.218750000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbce2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-1.218750000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbcf2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-1.234375000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbcf2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-1.234375000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbd02d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-1.250000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbd02910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-1.250000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbd12d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-1.265625000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbd12910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-1.265625000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbd22d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-1.281250000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbd22910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-1.281250000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbd32d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-1.296875000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbd32910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-1.296875000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbd42d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-1.312500000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbd42910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-1.312500000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbd52d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-1.328125000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbd52910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-1.328125000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbd62d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-1.343750000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbd62910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-1.343750000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbd72d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-1.359375000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbd72910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-1.359375000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbd82d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-1.375000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbd82910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-1.375000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbd92d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-1.390625000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbd92910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-1.390625000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbda2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-1.406250000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbda2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-1.406250000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbdb2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-1.421875000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbdb2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-1.421875000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbdc2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-1.437500000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbdc2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-1.437500000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbdd2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-1.453125000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbdd2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-1.453125000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbde2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-1.468750000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbde2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-1.468750000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbdf2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-1.484375000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbdf2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-1.484375000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbe02d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-1.500000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbe02910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-1.500000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbe12d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-1.515625000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbe12910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-1.515625000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbe22d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-1.531250000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbe22910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-1.531250000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbe32d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-1.546875000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbe32910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-1.546875000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbe42d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-1.562500000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbe42910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-1.562500000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbe52d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-1.578125000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbe52910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-1.578125000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbe62d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-1.593750000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbe62910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-1.593750000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbe72d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-1.609375000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbe72910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-1.609375000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbe82d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-1.625000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbe82910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-1.625000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbe92d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-1.640625000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbe92910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-1.640625000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbea2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-1.656250000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbea2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-1.656250000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbeb2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-1.671875000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbeb2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-1.671875000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbec2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-1.687500000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbec2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-1.687500000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbed2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-1.703125000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbed2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-1.703125000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbee2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-1.718750000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbee2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-1.718750000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbef2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-1.734375000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbef2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-1.734375000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbf02d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-1.750000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbf02910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-1.750000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbf12d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-1.765625000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbf12910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-1.765625000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbf22d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-1.781250000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbf22910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-1.781250000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbf32d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-1.796875000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbf32910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-1.796875000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbf42d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-1.812500000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbf42910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-1.812500000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbf52d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-1.828125000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbf52910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-1.828125000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbf62d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-1.843750000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbf62910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-1.843750000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbf72d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-1.859375000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbf72910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-1.859375000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbf82d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-1.875000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbf82910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-1.875000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbf92d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-1.890625000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbf92910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-1.890625000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbfa2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-1.906250000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbfa2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-1.906250000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbfb2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-1.921875000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbfb2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-1.921875000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbfc2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-1.937500000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbfc2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-1.937500000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbfd2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-1.953125000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbfd2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-1.953125000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbfe2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-1.968750000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbfe2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-1.968750000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbff2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-1.984375000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xbff2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-1.984375000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc002d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-2.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc002910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-2.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc012d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-2.031250000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc012910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-2.031250000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc022d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-2.062500000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc022910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-2.062500000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc032d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-2.093750000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc032910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-2.093750000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc042d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-2.125000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc042910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-2.125000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc052d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-2.156250000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc052910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-2.156250000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc062d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-2.187500000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc062910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-2.187500000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc072d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-2.218750000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc072910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-2.218750000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc082d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-2.250000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc082910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-2.250000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc092d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-2.281250000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc092910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-2.281250000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc0a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-2.312500000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc0a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-2.312500000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc0b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-2.343750000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc0b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-2.343750000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc0c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-2.375000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc0c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-2.375000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc0d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-2.406250000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc0d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-2.406250000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc0e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-2.437500000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc0e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-2.437500000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc0f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-2.468750000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc0f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-2.468750000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc102d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-2.500000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc102910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-2.500000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc112d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-2.531250000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc112910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-2.531250000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc122d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-2.562500000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc122910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-2.562500000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc132d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-2.593750000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc132910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-2.593750000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc142d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-2.625000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc142910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-2.625000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc152d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-2.656250000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc152910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-2.656250000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc162d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-2.687500000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc162910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-2.687500000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc172d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-2.718750000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc172910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-2.718750000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc182d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-2.750000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc182910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-2.750000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc192d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-2.781250000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc192910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-2.781250000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc1a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-2.812500000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc1a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-2.812500000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc1b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-2.843750000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc1b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-2.843750000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc1c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-2.875000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc1c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-2.875000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc1d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-2.906250000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc1d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-2.906250000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc1e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-2.937500000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc1e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-2.937500000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc1f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-2.968750000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc1f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-2.968750000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc202d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-3.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc202910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-3.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc212d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-3.031250000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc212910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-3.031250000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc222d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-3.062500000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc222910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-3.062500000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc232d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-3.093750000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc232910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-3.093750000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc242d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-3.125000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc242910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-3.125000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc252d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-3.156250000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc252910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-3.156250000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc262d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-3.187500000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc262910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-3.187500000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc272d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-3.218750000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc272910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-3.218750000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc282d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-3.250000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc282910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-3.250000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc292d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-3.281250000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc292910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-3.281250000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc2a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-3.312500000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc2a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-3.312500000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc2b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-3.343750000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc2b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-3.343750000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc2c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-3.375000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc2c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-3.375000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc2d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-3.406250000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc2d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-3.406250000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc2e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-3.437500000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc2e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-3.437500000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc2f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-3.468750000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc2f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-3.468750000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc302d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-3.500000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc302910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-3.500000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc312d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-3.531250000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc312910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-3.531250000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc322d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-3.562500000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc322910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-3.562500000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc332d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-3.593750000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc332910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-3.593750000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc342d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-3.625000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc342910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-3.625000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc352d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-3.656250000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc352910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-3.656250000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc362d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-3.687500000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc362910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-3.687500000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc372d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-3.718750000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc372910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-3.718750000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc382d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-3.750000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc382910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-3.750000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc392d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-3.781250000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc392910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-3.781250000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc3a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-3.812500000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc3a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-3.812500000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc3b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-3.843750000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc3b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-3.843750000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc3c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-3.875000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc3c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-3.875000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc3d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-3.906250000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc3d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-3.906250000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc3e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-3.937500000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc3e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-3.937500000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc3f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-3.968750000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc3f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-3.968750000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc402d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-4.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc402910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-4.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc412d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-4.062500000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc412910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-4.062500000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc422d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-4.125000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc422910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-4.125000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc432d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-4.187500000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc432910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-4.187500000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc442d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-4.250000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc442910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-4.250000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc452d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-4.312500000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc452910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-4.312500000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc462d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-4.375000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc462910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-4.375000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc472d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-4.437500000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc472910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-4.437500000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc482d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-4.500000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc482910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-4.500000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc492d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-4.562500000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc492910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-4.562500000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc4a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-4.625000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc4a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-4.625000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc4b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-4.687500000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc4b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-4.687500000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc4c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-4.750000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc4c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-4.750000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc4d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-4.812500000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc4d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-4.812500000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc4e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-4.875000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc4e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-4.875000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc4f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-4.937500000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc4f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-4.937500000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc502d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-5.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc502910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-5.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc512d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-5.062500000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc512910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-5.062500000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc522d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-5.125000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc522910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-5.125000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc532d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-5.187500000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc532910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-5.187500000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc542d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-5.250000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc542910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-5.250000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc552d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-5.312500000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc552910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-5.312500000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc562d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-5.375000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc562910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-5.375000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc572d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-5.437500000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc572910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-5.437500000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc582d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-5.500000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc582910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-5.500000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc592d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-5.562500000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc592910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-5.562500000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc5a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-5.625000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc5a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-5.625000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc5b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-5.687500000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc5b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-5.687500000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc5c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-5.750000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc5c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-5.750000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc5d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-5.812500000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc5d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-5.812500000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc5e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-5.875000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc5e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-5.875000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc5f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-5.937500000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc5f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-5.937500000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc602d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-6.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc602910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-6.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc612d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-6.062500000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc612910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-6.062500000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc622d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-6.125000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc622910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-6.125000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc632d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-6.187500000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc632910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-6.187500000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc642d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-6.250000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc642910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-6.250000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc652d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-6.312500000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc652910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-6.312500000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc662d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-6.375000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc662910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-6.375000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc672d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-6.437500000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc672910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-6.437500000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc682d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-6.500000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc682910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-6.500000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc692d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-6.562500000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc692910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-6.562500000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc6a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-6.625000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc6a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-6.625000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc6b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-6.687500000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc6b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-6.687500000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc6c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-6.750000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc6c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-6.750000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc6d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-6.812500000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc6d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-6.812500000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc6e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-6.875000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc6e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-6.875000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc6f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-6.937500000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc6f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-6.937500000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc702d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-7.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc702910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-7.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc712d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-7.062500000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc712910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-7.062500000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc722d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-7.125000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc722910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-7.125000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc732d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-7.187500000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc732910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-7.187500000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc742d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-7.250000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc742910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-7.250000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc752d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-7.312500000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc752910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-7.312500000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc762d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-7.375000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc762910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-7.375000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc772d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-7.437500000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc772910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-7.437500000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc782d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-7.500000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc782910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-7.500000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc792d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-7.562500000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc792910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-7.562500000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc7a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-7.625000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc7a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-7.625000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc7b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-7.687500000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc7b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-7.687500000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc7c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-7.750000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc7c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-7.750000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc7d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-7.812500000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc7d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-7.812500000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc7e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-7.875000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc7e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-7.875000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc7f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-7.937500000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc7f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-7.937500000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc802d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-8.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc802910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-8.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc812d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-8.125000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc812910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-8.125000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc822d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-8.250000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc822910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-8.250000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc832d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-8.375000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc832910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-8.375000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc842d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-8.500000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc842910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-8.500000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc852d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-8.625000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc852910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-8.625000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc862d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-8.750000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc862910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-8.750000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc872d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-8.875000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc872910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-8.875000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc882d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-9.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc882910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-9.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc892d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-9.125000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc892910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-9.125000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc8a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-9.250000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc8a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-9.250000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc8b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-9.375000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc8b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-9.375000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc8c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-9.500000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc8c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-9.500000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc8d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-9.625000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc8d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-9.625000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc8e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-9.750000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc8e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-9.750000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc8f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-9.875000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc8f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-9.875000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc902d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-10.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc902910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-10.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc912d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-10.125000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc912910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-10.125000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc922d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-10.250000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc922910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-10.250000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc932d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-10.375000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc932910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-10.375000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc942d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-10.500000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc942910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-10.500000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc952d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-10.625000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc952910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-10.625000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc962d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-10.750000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc962910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-10.750000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc972d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-10.875000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc972910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-10.875000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc982d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-11.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc982910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-11.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc992d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-11.125000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc992910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-11.125000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc9a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-11.250000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc9a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-11.250000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc9b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-11.375000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc9b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-11.375000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc9c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-11.500000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc9c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-11.500000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc9d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-11.625000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc9d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-11.625000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc9e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-11.750000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc9e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-11.750000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc9f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-11.875000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xc9f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-11.875000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xca02d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-12.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xca02910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-12.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xca12d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-12.125000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xca12910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-12.125000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xca22d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-12.250000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xca22910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-12.250000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xca32d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-12.375000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xca32910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-12.375000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xca42d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-12.500000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xca42910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-12.500000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xca52d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-12.625000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xca52910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-12.625000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xca62d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-12.750000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xca62910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-12.750000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xca72d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-12.875000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xca72910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-12.875000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xca82d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-13.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xca82910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-13.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xca92d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-13.125000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xca92910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-13.125000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xcaa2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-13.250000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xcaa2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-13.250000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xcab2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-13.375000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xcab2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-13.375000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xcac2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-13.500000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xcac2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-13.500000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xcad2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-13.625000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xcad2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-13.625000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xcae2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-13.750000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xcae2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-13.750000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xcaf2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-13.875000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xcaf2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-13.875000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xcb02d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-14.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xcb02910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-14.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xcb12d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-14.125000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xcb12910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-14.125000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xcb22d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-14.250000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xcb22910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-14.250000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xcb32d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-14.375000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xcb32910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-14.375000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xcb42d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-14.500000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xcb42910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-14.500000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xcb52d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-14.625000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xcb52910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-14.625000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xcb62d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-14.750000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xcb62910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-14.750000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xcb72d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-14.875000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xcb72910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-14.875000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xcb82d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-15.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xcb82910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-15.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xcb92d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-15.125000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xcb92910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-15.125000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xcba2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-15.250000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xcba2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-15.250000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xcbb2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-15.375000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xcbb2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-15.375000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xcbc2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-15.500000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xcbc2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-15.500000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xcbd2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-15.625000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xcbd2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-15.625000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xcbe2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-15.750000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xcbe2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-15.750000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xcbf2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-15.875000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xcbf2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-15.875000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xcc02d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-16.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xcc02910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-16.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xcc12d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-16.250000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xcc12910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-16.250000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xcc22d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-16.500000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xcc22910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-16.500000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xcc32d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-16.750000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xcc32910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-16.750000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xcc42d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-17.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xcc42910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-17.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xcc52d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-17.250000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xcc52910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-17.250000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xcc62d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-17.500000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xcc62910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-17.500000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xcc72d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-17.750000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xcc72910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-17.750000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xcc82d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-18.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xcc82910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-18.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xcc92d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-18.250000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xcc92910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-18.250000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xcca2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-18.500000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xcca2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-18.500000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xccb2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-18.750000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xccb2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-18.750000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xccc2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-19.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xccc2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-19.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xccd2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-19.250000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xccd2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-19.250000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xcce2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-19.500000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xcce2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-19.500000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xccf2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-19.750000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xccf2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-19.750000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xcd02d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-20.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xcd02910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-20.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xcd12d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-20.250000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xcd12910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-20.250000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xcd22d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-20.500000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xcd22910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-20.500000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xcd32d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-20.750000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xcd32910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-20.750000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xcd42d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-21.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xcd42910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-21.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xcd52d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-21.250000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xcd52910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-21.250000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xcd62d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-21.500000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xcd62910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-21.500000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xcd72d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-21.750000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xcd72910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-21.750000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xcd82d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-22.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xcd82910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-22.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xcd92d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-22.250000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xcd92910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-22.250000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xcda2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-22.500000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xcda2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-22.500000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xcdb2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-22.750000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xcdb2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-22.750000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xcdc2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-23.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xcdc2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-23.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xcdd2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-23.250000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xcdd2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-23.250000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xcde2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-23.500000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xcde2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-23.500000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xcdf2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-23.750000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xcdf2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-23.750000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xce02d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-24.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xce02910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-24.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xce12d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-24.250000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xce12910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-24.250000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xce22d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-24.500000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xce22910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-24.500000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xce32d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-24.750000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xce32910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-24.750000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xce42d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-25.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xce42910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-25.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xce52d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-25.250000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xce52910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-25.250000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xce62d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-25.500000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xce62910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-25.500000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xce72d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-25.750000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xce72910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-25.750000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xce82d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-26.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xce82910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-26.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xce92d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-26.250000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xce92910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-26.250000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xcea2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-26.500000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xcea2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-26.500000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xceb2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-26.750000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xceb2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-26.750000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xcec2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-27.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xcec2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-27.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xced2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-27.250000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xced2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-27.250000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xcee2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-27.500000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xcee2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-27.500000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xcef2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-27.750000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xcef2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-27.750000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xcf02d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-28.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xcf02910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-28.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xcf12d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-28.250000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xcf12910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-28.250000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xcf22d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-28.500000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xcf22910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-28.500000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xcf32d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-28.750000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xcf32910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-28.750000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xcf42d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-29.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xcf42910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-29.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xcf52d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-29.250000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xcf52910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-29.250000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xcf62d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-29.500000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xcf62910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-29.500000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xcf72d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-29.750000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xcf72910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-29.750000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xcf82d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-30.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xcf82910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-30.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xcf92d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-30.250000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xcf92910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-30.250000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xcfa2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-30.500000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xcfa2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-30.500000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xcfb2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-30.750000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xcfb2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-30.750000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xcfc2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-31.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xcfc2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-31.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xcfd2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-31.250000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xcfd2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-31.250000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xcfe2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-31.500000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xcfe2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-31.500000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xcff2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-31.750000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xcff2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-31.750000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd002d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-32.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd002910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-32.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd012d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-32.500000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd012910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-32.500000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd022d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-33.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd022910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-33.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd032d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-33.500000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd032910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-33.500000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd042d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-34.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd042910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-34.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd052d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-34.500000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd052910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-34.500000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd062d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-35.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd062910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-35.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd072d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-35.500000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd072910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-35.500000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd082d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-36.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd082910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-36.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd092d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-36.500000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd092910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-36.500000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd0a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-37.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd0a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-37.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd0b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-37.500000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd0b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-37.500000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd0c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-38.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd0c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-38.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd0d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-38.500000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd0d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-38.500000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd0e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-39.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd0e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-39.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd0f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-39.500000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd0f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-39.500000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd102d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-40.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd102910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-40.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd112d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-40.500000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd112910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-40.500000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd122d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-41.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd122910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-41.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd132d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-41.500000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd132910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-41.500000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd142d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-42.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd142910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-42.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd152d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-42.500000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd152910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-42.500000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd162d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-43.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd162910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-43.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd172d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-43.500000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd172910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-43.500000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd182d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-44.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd182910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-44.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd192d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-44.500000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd192910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-44.500000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd1a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-45.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd1a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-45.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd1b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-45.500000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd1b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-45.500000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd1c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-46.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd1c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-46.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd1d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-46.500000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd1d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-46.500000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd1e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-47.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd1e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-47.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd1f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-47.500000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd1f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-47.500000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd202d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-48.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd202910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-48.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd212d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-48.500000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd212910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-48.500000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd222d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-49.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd222910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-49.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd232d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-49.500000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd232910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-49.500000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd242d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-50.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd242910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-50.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd252d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-50.500000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd252910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-50.500000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd262d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-51.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd262910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-51.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd272d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-51.500000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd272910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-51.500000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd282d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-52.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd282910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-52.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd292d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-52.500000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd292910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-52.500000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd2a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-53.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd2a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-53.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd2b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-53.500000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd2b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-53.500000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd2c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-54.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd2c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-54.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd2d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-54.500000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd2d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-54.500000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd2e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-55.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd2e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-55.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd2f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-55.500000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd2f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-55.500000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd302d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-56.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd302910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-56.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd312d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-56.500000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd312910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-56.500000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd322d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-57.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd322910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-57.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd332d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-57.500000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd332910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-57.500000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd342d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-58.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd342910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-58.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd352d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-58.500000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd352910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-58.500000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd362d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-59.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd362910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-59.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd372d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-59.500000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd372910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-59.500000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd382d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-60.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd382910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-60.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd392d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-60.500000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd392910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-60.500000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd3a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-61.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd3a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-61.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd3b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-61.500000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd3b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-61.500000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd3c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-62.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd3c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-62.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd3d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-62.500000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd3d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-62.500000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd3e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-63.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd3e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-63.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd3f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-63.500000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd3f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-63.500000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd402d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-64.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd402910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-64.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd412d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-65.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd412910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-65.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd422d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-66.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd422910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-66.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd432d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-67.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd432910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-67.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd442d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-68.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd442910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-68.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd452d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-69.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd452910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-69.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd462d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-70.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd462910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-70.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd472d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-71.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd472910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-71.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd482d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-72.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd482910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-72.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd492d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-73.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd492910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-73.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd4a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-74.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd4a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-74.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd4b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-75.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd4b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-75.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd4c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-76.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd4c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-76.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd4d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-77.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd4d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-77.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd4e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-78.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd4e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-78.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd4f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-79.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd4f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-79.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd502d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-80.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd502910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-80.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd512d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-81.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd512910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-81.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd522d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-82.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd522910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-82.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd532d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-83.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd532910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-83.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd542d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-84.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd542910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-84.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd552d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-85.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd552910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-85.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd562d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-86.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd562910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-86.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd572d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-87.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd572910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-87.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd582d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-88.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd582910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-88.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd592d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-89.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd592910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-89.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd5a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-90.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd5a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-90.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd5b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-91.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd5b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-91.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd5c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-92.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd5c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-92.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd5d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-93.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd5d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-93.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd5e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-94.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd5e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-94.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd5f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-95.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd5f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-95.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd602d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-96.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd602910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-96.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd612d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-97.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd612910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-97.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd622d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-98.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd622910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-98.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd632d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-99.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd632910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-99.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd642d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-100.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd642910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-100.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd652d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-101.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd652910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-101.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd662d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-102.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd662910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-102.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd672d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-103.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd672910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-103.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd682d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-104.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd682910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-104.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd692d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-105.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd692910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-105.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd6a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-106.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd6a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-106.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd6b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-107.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd6b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-107.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd6c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-108.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd6c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-108.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd6d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-109.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd6d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-109.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd6e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-110.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd6e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-110.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd6f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-111.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd6f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-111.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd702d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-112.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd702910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-112.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd712d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-113.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd712910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-113.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd722d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-114.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd722910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-114.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd732d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-115.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd732910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-115.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd742d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-116.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd742910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-116.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd752d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-117.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd752910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-117.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd762d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-118.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd762910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-118.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd772d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-119.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd772910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-119.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd782d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-120.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd782910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-120.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd792d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-121.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd792910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-121.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd7a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-122.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd7a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-122.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd7b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-123.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd7b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-123.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd7c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-124.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd7c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-124.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd7d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-125.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd7d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-125.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd7e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-126.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd7e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-126.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd7f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-127.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd7f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-127.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd802d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-128.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd802910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-128.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd812d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-130.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd812910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-130.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd822d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-132.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd822910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-132.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd832d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-134.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd832910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-134.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd842d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-136.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd842910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-136.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd852d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-138.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd852910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-138.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd862d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-140.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd862910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-140.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd872d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-142.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd872910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-142.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd882d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-144.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd882910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-144.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd892d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-146.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd892910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-146.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd8a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-148.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd8a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-148.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd8b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-150.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd8b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-150.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd8c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-152.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd8c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-152.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd8d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-154.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd8d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-154.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd8e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-156.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd8e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-156.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd8f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-158.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd8f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-158.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd902d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-160.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd902910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-160.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd912d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-162.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd912910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-162.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd922d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-164.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd922910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-164.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd932d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-166.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd932910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-166.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd942d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-168.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd942910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-168.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd952d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-170.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd952910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-170.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd962d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-172.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd962910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-172.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd972d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-174.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd972910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-174.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd982d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-176.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd982910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-176.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd992d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-178.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd992910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-178.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd9a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-180.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd9a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-180.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd9b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-182.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd9b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-182.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd9c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-184.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd9c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-184.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd9d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-186.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd9d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-186.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd9e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-188.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd9e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-188.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd9f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-190.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xd9f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-190.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xda02d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-192.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xda02910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-192.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xda12d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-194.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xda12910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-194.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xda22d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-196.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xda22910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-196.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xda32d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-198.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xda32910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-198.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xda42d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-200.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xda42910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-200.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xda52d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-202.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xda52910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-202.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xda62d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-204.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xda62910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-204.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xda72d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-206.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xda72910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-206.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xda82d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-208.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xda82910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-208.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xda92d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-210.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xda92910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-210.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xdaa2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-212.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xdaa2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-212.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xdab2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-214.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xdab2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-214.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xdac2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-216.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xdac2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-216.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xdad2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-218.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xdad2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-218.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xdae2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-220.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xdae2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-220.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xdaf2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-222.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xdaf2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-222.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xdb02d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-224.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xdb02910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-224.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xdb12d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-226.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xdb12910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-226.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xdb22d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-228.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xdb22910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-228.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xdb32d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-230.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xdb32910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-230.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xdb42d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-232.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xdb42910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-232.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xdb52d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-234.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xdb52910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-234.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xdb62d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-236.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xdb62910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-236.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xdb72d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-238.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xdb72910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-238.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xdb82d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-240.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xdb82910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-240.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xdb92d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-242.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xdb92910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-242.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xdba2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-244.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xdba2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-244.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xdbb2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-246.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xdbb2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-246.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xdbc2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-248.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xdbc2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-248.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xdbd2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-250.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xdbd2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-250.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xdbe2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-252.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xdbe2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-252.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xdbf2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-254.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xdbf2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-254.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xdc02d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-256.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xdc02910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-256.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xdc12d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-260.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xdc12910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-260.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xdc22d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-264.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xdc22910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-264.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xdc32d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-268.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xdc32910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-268.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xdc42d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-272.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xdc42910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-272.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xdc52d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-276.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xdc52910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-276.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xdc62d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-280.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xdc62910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-280.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xdc72d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-284.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xdc72910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-284.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xdc82d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-288.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xdc82910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-288.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xdc92d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-292.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xdc92910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-292.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xdca2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-296.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xdca2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-296.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xdcb2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-300.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xdcb2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-300.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xdcc2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-304.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xdcc2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-304.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xdcd2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-308.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xdcd2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-308.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xdce2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-312.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xdce2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-312.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xdcf2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-316.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xdcf2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-316.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xdd02d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-320.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xdd02910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-320.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xdd12d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-324.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xdd12910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-324.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xdd22d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-328.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xdd22910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-328.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xdd32d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-332.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xdd32910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-332.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xdd42d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-336.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xdd42910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-336.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xdd52d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-340.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xdd52910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-340.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xdd62d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-344.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xdd62910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-344.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xdd72d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-348.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xdd72910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-348.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xdd82d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-352.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xdd82910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-352.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xdd92d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-356.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xdd92910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-356.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xdda2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-360.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xdda2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-360.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xddb2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-364.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xddb2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-364.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xddc2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-368.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xddc2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-368.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xddd2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-372.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xddd2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-372.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xdde2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-376.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xdde2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-376.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xddf2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-380.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xddf2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-380.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xde02d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-384.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xde02910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-384.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xde12d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-388.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xde12910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-388.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xde22d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-392.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xde22910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-392.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xde32d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-396.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xde32910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-396.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xde42d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-400.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xde42910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-400.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xde52d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-404.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xde52910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-404.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xde62d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-408.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xde62910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-408.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xde72d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-412.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xde72910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-412.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xde82d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-416.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xde82910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-416.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xde92d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-420.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xde92910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-420.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xdea2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-424.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xdea2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-424.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xdeb2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-428.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xdeb2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-428.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xdec2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-432.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xdec2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-432.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xded2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-436.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xded2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-436.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xdee2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-440.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xdee2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-440.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xdef2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-444.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xdef2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-444.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xdf02d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-448.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xdf02910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-448.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xdf12d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-452.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xdf12910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-452.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xdf22d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-456.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xdf22910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-456.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xdf32d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-460.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xdf32910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-460.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xdf42d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-464.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xdf42910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-464.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xdf52d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-468.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xdf52910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-468.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xdf62d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-472.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xdf62910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-472.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xdf72d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-476.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xdf72910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-476.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xdf82d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-480.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xdf82910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-480.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xdf92d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-484.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xdf92910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-484.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xdfa2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-488.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xdfa2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-488.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xdfb2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-492.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xdfb2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-492.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xdfc2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-496.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xdfc2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-496.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xdfd2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-500.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xdfd2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-500.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xdfe2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-504.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xdfe2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-504.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xdff2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-508.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xdff2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-508.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe002d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-512.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe002910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-512.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe012d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-520.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe012910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-520.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe022d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-528.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe022910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-528.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe032d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-536.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe032910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-536.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe042d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-544.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe042910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-544.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe052d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-552.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe052910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-552.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe062d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-560.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe062910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-560.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe072d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-568.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe072910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-568.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe082d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-576.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe082910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-576.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe092d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-584.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe092910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-584.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe0a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-592.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe0a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-592.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe0b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-600.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe0b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-600.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe0c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-608.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe0c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-608.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe0d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-616.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe0d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-616.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe0e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-624.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe0e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-624.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe0f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-632.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe0f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-632.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe102d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-640.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe102910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-640.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe112d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-648.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe112910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-648.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe122d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-656.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe122910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-656.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe132d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-664.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe132910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-664.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe142d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-672.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe142910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-672.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe152d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-680.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe152910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-680.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe162d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-688.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe162910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-688.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe172d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-696.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe172910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-696.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe182d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-704.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe182910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-704.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe192d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-712.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe192910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-712.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe1a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-720.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe1a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-720.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe1b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-728.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe1b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-728.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe1c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-736.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe1c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-736.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe1d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-744.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe1d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-744.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe1e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-752.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe1e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-752.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe1f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-760.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe1f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-760.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe202d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-768.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe202910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-768.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe212d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-776.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe212910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-776.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe222d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-784.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe222910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-784.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe232d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-792.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe232910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-792.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe242d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-800.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe242910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-800.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe252d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-808.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe252910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-808.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe262d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-816.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe262910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-816.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe272d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-824.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe272910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-824.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe282d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-832.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe282910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-832.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe292d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-840.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe292910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-840.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe2a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-848.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe2a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-848.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe2b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-856.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe2b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-856.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe2c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-864.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe2c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-864.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe2d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-872.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe2d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-872.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe2e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-880.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe2e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-880.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe2f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-888.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe2f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-888.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe302d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-896.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe302910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-896.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe312d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-904.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe312910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-904.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe322d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-912.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe322910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-912.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe332d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-920.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe332910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-920.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe342d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-928.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe342910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-928.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe352d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-936.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe352910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-936.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe362d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-944.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe362910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-944.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe372d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-952.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe372910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-952.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe382d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-960.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe382910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-960.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe392d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-968.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe392910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-968.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe3a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-976.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe3a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-976.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe3b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-984.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe3b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-984.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe3c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-992.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe3c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-992.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe3d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-1000.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe3d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-1000.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe3e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-1008.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe3e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-1008.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe3f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-1016.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe3f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-1016.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe402d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-1024.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe402910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-1024.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe412d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-1040.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe412910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-1040.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe422d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-1056.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe422910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-1056.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe432d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-1072.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe432910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-1072.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe442d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-1088.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe442910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-1088.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe452d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-1104.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe452910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-1104.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe462d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-1120.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe462910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-1120.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe472d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-1136.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe472910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-1136.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe482d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-1152.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe482910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-1152.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe492d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-1168.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe492910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-1168.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe4a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-1184.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe4a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-1184.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe4b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-1200.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe4b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-1200.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe4c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-1216.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe4c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-1216.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe4d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-1232.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe4d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-1232.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe4e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-1248.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe4e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-1248.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe4f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-1264.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe4f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-1264.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe502d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-1280.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe502910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-1280.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe512d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-1296.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe512910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-1296.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe522d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-1312.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe522910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-1312.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe532d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-1328.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe532910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-1328.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe542d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-1344.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe542910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-1344.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe552d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-1360.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe552910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-1360.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe562d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-1376.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe562910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-1376.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe572d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-1392.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe572910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-1392.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe582d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-1408.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe582910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-1408.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe592d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-1424.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe592910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-1424.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe5a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-1440.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe5a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-1440.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe5b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-1456.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe5b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-1456.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe5c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-1472.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe5c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-1472.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe5d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-1488.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe5d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-1488.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe5e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-1504.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe5e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-1504.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe5f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-1520.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe5f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-1520.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe602d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-1536.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe602910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-1536.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe612d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-1552.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe612910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-1552.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe622d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-1568.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe622910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-1568.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe632d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-1584.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe632910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-1584.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe642d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-1600.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe642910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-1600.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe652d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-1616.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe652910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-1616.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe662d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-1632.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe662910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-1632.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe672d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-1648.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe672910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-1648.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe682d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-1664.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe682910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-1664.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe692d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-1680.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe692910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-1680.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe6a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-1696.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe6a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-1696.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe6b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-1712.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe6b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-1712.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe6c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-1728.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe6c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-1728.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe6d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-1744.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe6d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-1744.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe6e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-1760.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe6e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-1760.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe6f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-1776.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe6f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-1776.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe702d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-1792.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe702910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-1792.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe712d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-1808.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe712910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-1808.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe722d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-1824.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe722910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-1824.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe732d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-1840.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe732910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-1840.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe742d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-1856.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe742910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-1856.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe752d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-1872.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe752910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-1872.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe762d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-1888.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe762910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-1888.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe772d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-1904.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe772910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-1904.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe782d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-1920.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe782910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-1920.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe792d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-1936.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe792910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-1936.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe7a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-1952.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe7a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-1952.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe7b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-1968.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe7b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-1968.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe7c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-1984.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe7c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-1984.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe7d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-2000.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe7d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-2000.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe7e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-2016.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe7e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-2016.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe7f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-2032.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe7f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-2032.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe802d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-2048.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe802910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-2048.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe812d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-2080.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe812910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-2080.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe822d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-2112.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe822910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-2112.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe832d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-2144.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe832910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-2144.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe842d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-2176.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe842910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-2176.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe852d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-2208.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe852910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-2208.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe862d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-2240.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe862910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-2240.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe872d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-2272.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe872910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-2272.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe882d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-2304.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe882910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-2304.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe892d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-2336.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe892910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-2336.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe8a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-2368.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe8a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-2368.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe8b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-2400.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe8b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-2400.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe8c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-2432.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe8c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-2432.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe8d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-2464.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe8d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-2464.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe8e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-2496.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe8e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-2496.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe8f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-2528.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe8f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-2528.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe902d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-2560.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe902910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-2560.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe912d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-2592.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe912910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-2592.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe922d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-2624.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe922910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-2624.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe932d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-2656.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe932910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-2656.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe942d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-2688.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe942910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-2688.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe952d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-2720.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe952910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-2720.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe962d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-2752.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe962910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-2752.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe972d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-2784.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe972910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-2784.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe982d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-2816.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe982910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-2816.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe992d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-2848.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe992910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-2848.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe9a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-2880.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe9a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-2880.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe9b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-2912.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe9b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-2912.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe9c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-2944.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe9c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-2944.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe9d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-2976.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe9d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-2976.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe9e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-3008.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe9e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-3008.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe9f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-3040.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xe9f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-3040.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xea02d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-3072.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xea02910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-3072.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xea12d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-3104.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xea12910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-3104.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xea22d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-3136.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xea22910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-3136.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xea32d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-3168.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xea32910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-3168.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xea42d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-3200.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xea42910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-3200.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xea52d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-3232.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xea52910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-3232.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xea62d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-3264.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xea62910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-3264.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xea72d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-3296.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xea72910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-3296.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xea82d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-3328.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xea82910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-3328.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xea92d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-3360.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xea92910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-3360.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xeaa2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-3392.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xeaa2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-3392.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xeab2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-3424.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xeab2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-3424.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xeac2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-3456.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xeac2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-3456.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xead2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-3488.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xead2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-3488.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xeae2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-3520.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xeae2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-3520.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xeaf2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-3552.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xeaf2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-3552.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xeb02d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-3584.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xeb02910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-3584.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xeb12d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-3616.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xeb12910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-3616.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xeb22d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-3648.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xeb22910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-3648.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xeb32d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-3680.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xeb32910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-3680.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xeb42d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-3712.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xeb42910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-3712.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xeb52d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-3744.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xeb52910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-3744.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xeb62d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-3776.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xeb62910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-3776.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xeb72d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-3808.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xeb72910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-3808.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xeb82d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-3840.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xeb82910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-3840.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xeb92d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-3872.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xeb92910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-3872.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xeba2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-3904.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xeba2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-3904.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xebb2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-3936.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xebb2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-3936.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xebc2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-3968.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xebc2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-3968.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xebd2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-4000.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xebd2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-4000.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xebe2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-4032.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xebe2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-4032.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xebf2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-4064.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xebf2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-4064.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xec02d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-4096.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xec02910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-4096.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xec12d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-4160.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xec12910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-4160.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xec22d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-4224.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xec22910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-4224.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xec32d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-4288.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xec32910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-4288.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xec42d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-4352.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xec42910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-4352.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xec52d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-4416.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xec52910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-4416.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xec62d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-4480.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xec62910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-4480.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xec72d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-4544.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xec72910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-4544.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xec82d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-4608.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xec82910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-4608.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xec92d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-4672.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xec92910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-4672.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xeca2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-4736.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xeca2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-4736.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xecb2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-4800.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xecb2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-4800.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xecc2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-4864.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xecc2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-4864.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xecd2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-4928.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xecd2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-4928.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xece2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-4992.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xece2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-4992.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xecf2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-5056.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xecf2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-5056.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xed02d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-5120.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xed02910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-5120.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xed12d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-5184.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xed12910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-5184.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xed22d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-5248.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xed22910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-5248.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xed32d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-5312.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xed32910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-5312.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xed42d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-5376.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xed42910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-5376.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xed52d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-5440.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xed52910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-5440.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xed62d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-5504.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xed62910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-5504.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xed72d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-5568.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xed72910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-5568.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xed82d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-5632.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xed82910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-5632.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xed92d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-5696.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xed92910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-5696.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xeda2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-5760.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xeda2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-5760.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xedb2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-5824.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xedb2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-5824.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xedc2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-5888.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xedc2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-5888.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xedd2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-5952.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xedd2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-5952.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xede2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-6016.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xede2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-6016.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xedf2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-6080.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xedf2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-6080.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xee02d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-6144.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xee02910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-6144.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xee12d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-6208.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xee12910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-6208.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xee22d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-6272.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xee22910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-6272.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xee32d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-6336.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xee32910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-6336.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xee42d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-6400.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xee42910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-6400.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xee52d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-6464.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xee52910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-6464.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xee62d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-6528.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xee62910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-6528.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xee72d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-6592.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xee72910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-6592.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xee82d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-6656.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xee82910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-6656.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xee92d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-6720.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xee92910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-6720.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xeea2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-6784.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xeea2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-6784.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xeeb2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-6848.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xeeb2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-6848.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xeec2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-6912.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xeec2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-6912.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xeed2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-6976.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xeed2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-6976.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xeee2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-7040.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xeee2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-7040.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xeef2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-7104.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xeef2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-7104.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xef02d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-7168.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xef02910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-7168.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xef12d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-7232.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xef12910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-7232.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xef22d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-7296.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xef22910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-7296.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xef32d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-7360.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xef32910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-7360.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xef42d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-7424.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xef42910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-7424.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xef52d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-7488.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xef52910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-7488.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xef62d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-7552.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xef62910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-7552.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xef72d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-7616.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xef72910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-7616.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xef82d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-7680.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xef82910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-7680.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xef92d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-7744.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xef92910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-7744.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xefa2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-7808.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xefa2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-7808.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xefb2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-7872.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xefb2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-7872.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xefc2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-7936.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xefc2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-7936.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xefd2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-8000.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xefd2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-8000.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xefe2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-8064.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xefe2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-8064.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xeff2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-8128.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xeff2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-8128.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf002d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-8192.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf002910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-8192.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf012d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-8320.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf012910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-8320.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf022d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-8448.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf022910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-8448.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf032d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-8576.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf032910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-8576.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf042d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-8704.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf042910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-8704.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf052d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-8832.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf052910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-8832.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf062d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-8960.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf062910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-8960.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf072d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-9088.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf072910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-9088.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf082d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-9216.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf082910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-9216.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf092d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-9344.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf092910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-9344.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf0a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-9472.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf0a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-9472.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf0b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-9600.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf0b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-9600.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf0c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-9728.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf0c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-9728.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf0d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-9856.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf0d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-9856.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf0e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-9984.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf0e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-9984.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf0f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-10112.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf0f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-10112.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf102d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-10240.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf102910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-10240.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf112d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-10368.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf112910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-10368.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf122d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-10496.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf122910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-10496.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf132d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-10624.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf132910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-10624.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf142d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-10752.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf142910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-10752.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf152d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-10880.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf152910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-10880.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf162d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-11008.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf162910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-11008.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf172d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-11136.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf172910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-11136.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf182d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-11264.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf182910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-11264.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf192d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-11392.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf192910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-11392.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf1a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-11520.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf1a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-11520.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf1b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-11648.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf1b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-11648.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf1c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-11776.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf1c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-11776.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf1d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-11904.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf1d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-11904.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf1e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-12032.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf1e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-12032.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf1f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-12160.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf1f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-12160.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf202d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-12288.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf202910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-12288.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf212d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-12416.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf212910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-12416.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf222d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-12544.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf222910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-12544.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf232d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-12672.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf232910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-12672.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf242d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-12800.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf242910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-12800.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf252d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-12928.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf252910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-12928.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf262d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-13056.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf262910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-13056.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf272d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-13184.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf272910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-13184.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf282d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-13312.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf282910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-13312.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf292d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-13440.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf292910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-13440.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf2a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-13568.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf2a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-13568.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf2b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-13696.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf2b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-13696.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf2c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-13824.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf2c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-13824.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf2d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-13952.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf2d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-13952.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf2e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-14080.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf2e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-14080.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf2f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-14208.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf2f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-14208.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf302d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-14336.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf302910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-14336.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf312d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-14464.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf312910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-14464.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf322d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-14592.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf322910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-14592.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf332d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-14720.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf332910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-14720.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf342d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-14848.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf342910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-14848.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf352d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-14976.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf352910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-14976.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf362d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-15104.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf362910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-15104.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf372d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-15232.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf372910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-15232.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf382d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-15360.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf382910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-15360.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf392d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-15488.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf392910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-15488.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf3a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-15616.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf3a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-15616.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf3b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-15744.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf3b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-15744.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf3c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-15872.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf3c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-15872.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf3d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-16000.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf3d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-16000.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf3e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-16128.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf3e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-16128.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf3f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-16256.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf3f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-16256.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf402d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-16384.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf402910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-16384.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf412d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-16640.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf412910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-16640.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf422d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-16896.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf422910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-16896.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf432d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-17152.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf432910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-17152.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf442d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-17408.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf442910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-17408.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf452d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-17664.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf452910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-17664.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf462d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-17920.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf462910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-17920.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf472d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-18176.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf472910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-18176.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf482d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-18432.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf482910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-18432.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf492d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-18688.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf492910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-18688.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf4a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-18944.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf4a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-18944.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf4b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-19200.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf4b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-19200.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf4c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-19456.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf4c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-19456.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf4d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-19712.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf4d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-19712.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf4e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-19968.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf4e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-19968.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf4f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-20224.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf4f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-20224.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf502d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-20480.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf502910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-20480.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf512d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-20736.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf512910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-20736.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf522d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-20992.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf522910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-20992.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf532d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-21248.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf532910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-21248.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf542d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-21504.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf542910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-21504.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf552d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-21760.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf552910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-21760.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf562d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-22016.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf562910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-22016.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf572d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-22272.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf572910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-22272.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf582d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-22528.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf582910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-22528.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf592d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-22784.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf592910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-22784.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf5a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-23040.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf5a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-23040.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf5b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-23296.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf5b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-23296.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf5c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-23552.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf5c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-23552.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf5d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-23808.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf5d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-23808.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf5e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-24064.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf5e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-24064.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf5f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-24320.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf5f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-24320.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf602d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-24576.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf602910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-24576.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf612d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-24832.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf612910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-24832.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf622d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-25088.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf622910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-25088.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf632d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-25344.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf632910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-25344.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf642d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-25600.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf642910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-25600.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf652d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-25856.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf652910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-25856.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf662d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-26112.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf662910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-26112.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf672d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-26368.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf672910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-26368.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf682d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-26624.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf682910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-26624.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf692d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-26880.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf692910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-26880.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf6a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-27136.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf6a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-27136.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf6b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-27392.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf6b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-27392.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf6c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-27648.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf6c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-27648.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf6d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-27904.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf6d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-27904.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf6e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-28160.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf6e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-28160.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf6f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-28416.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf6f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-28416.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf702d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-28672.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf702910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-28672.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf712d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-28928.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf712910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-28928.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf722d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-29184.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf722910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-29184.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf732d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-29440.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf732910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-29440.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf742d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-29696.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf742910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-29696.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf752d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-29952.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf752910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-29952.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf762d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-30208.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf762910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-30208.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf772d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-30464.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf772910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-30464.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf782d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-30720.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf782910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-30720.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf792d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-30976.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf792910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-30976.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf7a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-31232.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf7a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-31232.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf7b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-31488.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf7b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-31488.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf7c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-31744.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf7c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-31744.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf7d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-32000.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf7d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-32000.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf7e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-32256.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf7e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-32256.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf7f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-32512.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf7f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-32512.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf802d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-32768.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf802910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-32768.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf812d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-33280.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf812910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-33280.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf822d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-33792.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf822910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-33792.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf832d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-34304.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf832910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-34304.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf842d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-34816.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf842910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-34816.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf852d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-35328.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf852910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-35328.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf862d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-35840.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf862910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-35840.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf872d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-36352.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf872910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-36352.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf882d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-36864.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf882910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-36864.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf892d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-37376.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf892910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-37376.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf8a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-37888.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf8a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-37888.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf8b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-38400.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf8b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-38400.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf8c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-38912.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf8c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-38912.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf8d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-39424.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf8d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-39424.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf8e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-39936.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf8e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-39936.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf8f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-40448.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf8f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-40448.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf902d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-40960.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf902910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-40960.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf912d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-41472.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf912910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-41472.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf922d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-41984.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf922910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-41984.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf932d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-42496.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf932910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-42496.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf942d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-43008.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf942910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-43008.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf952d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-43520.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf952910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-43520.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf962d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-44032.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf962910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-44032.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf972d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-44544.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf972910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-44544.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf982d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-45056.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf982910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-45056.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf992d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-45568.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf992910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-45568.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf9a2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-46080.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf9a2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-46080.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf9b2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-46592.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf9b2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-46592.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf9c2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-47104.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf9c2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-47104.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf9d2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-47616.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf9d2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-47616.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf9e2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-48128.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf9e2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-48128.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf9f2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-48640.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xf9f2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-48640.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xfa02d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-49152.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xfa02910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-49152.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xfa12d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-49664.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xfa12910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-49664.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xfa22d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-50176.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xfa22910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-50176.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xfa32d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-50688.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xfa32910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-50688.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xfa42d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-51200.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xfa42910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-51200.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xfa52d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-51712.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xfa52910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-51712.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xfa62d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-52224.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xfa62910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-52224.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xfa72d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-52736.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xfa72910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-52736.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xfa82d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-53248.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xfa82910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-53248.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xfa92d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-53760.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xfa92910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-53760.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xfaa2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-54272.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xfaa2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-54272.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xfab2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-54784.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xfab2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-54784.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xfac2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-55296.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xfac2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-55296.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xfad2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-55808.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xfad2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-55808.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xfae2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-56320.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xfae2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-56320.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xfaf2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-56832.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xfaf2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-56832.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xfb02d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-57344.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xfb02910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-57344.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xfb12d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-57856.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xfb12910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-57856.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xfb22d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-58368.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xfb22910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-58368.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xfb32d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-58880.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xfb32910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-58880.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xfb42d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-59392.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xfb42910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-59392.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xfb52d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-59904.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xfb52910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-59904.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xfb62d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-60416.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xfb62910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-60416.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xfb72d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-60928.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xfb72910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-60928.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xfb82d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-61440.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xfb82910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-61440.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xfb92d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-61952.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xfb92910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-61952.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xfba2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-62464.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xfba2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-62464.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xfbb2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-62976.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xfbb2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-62976.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xfbc2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-63488.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xfbc2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-63488.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xfbd2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-64000.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xfbd2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-64000.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xfbe2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-64512.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xfbe2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-64512.000000000000000);
// fmovLT x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xfbf2d10b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result!=-65024.000000000000000);
// fmovEQ x5 f2 IMM
asm volatile("lui x5, 0\n" ".word 0xfbf2910b\n" "fmv.x.w %0, f2\n" :"=r"(result)); assert(result==-65024.000000000000000);
